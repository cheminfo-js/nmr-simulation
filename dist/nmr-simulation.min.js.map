{"version":3,"sources":["webpack://nmrSimulation/webpack/universalModuleDefinition","webpack://nmrSimulation/webpack/bootstrap","webpack://nmrSimulation/./node_modules/ml-sparse-matrix/src/SparseMatrix.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/index.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/matrix.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/base.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/util.js","webpack://nmrSimulation/./node_modules/num-sort/index.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/dc/util.js","webpack://nmrSimulation/./node_modules/ml-hclust/src/Cluster.js","webpack://nmrSimulation/./node_modules/new-array/index.js","webpack://nmrSimulation/./node_modules/binary-search/index.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/abstractMatrix.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/dc/lu.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/dc/svd.js","webpack://nmrSimulation/./node_modules/ml-stat/index.js","webpack://nmrSimulation/./node_modules/ml-stat/array.js","webpack://nmrSimulation/./node_modules/ml-distance-euclidean/euclidean.js","webpack://nmrSimulation/./node_modules/ml-hclust/src/ClusterLeaf.js","webpack://nmrSimulation/./node_modules/ml-simple-clustering/src/index.js","webpack://nmrSimulation/./node_modules/ml-hclust/src/index.js","webpack://nmrSimulation/./index.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/symbol-species.js","webpack://nmrSimulation/./node_modules/ml-array-utils/src/index.js","webpack://nmrSimulation/./node_modules/ml-array-utils/src/ArrayUtils.js","webpack://nmrSimulation/./node_modules/ml-stat/matrix.js","webpack://nmrSimulation/./node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://nmrSimulation/./node_modules/ml-array-utils/src/snv.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/transpose.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/row.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/sub.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/selection.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/column.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/flipRow.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/views/flipColumn.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/decompositions.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/dc/evd.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/dc/qr.js","webpack://nmrSimulation/./node_modules/ml-matrix/src/dc/cholesky.js","webpack://nmrSimulation/./node_modules/ml-hclust/src/agnes.js","webpack://nmrSimulation/./node_modules/heap/index.js","webpack://nmrSimulation/./node_modules/heap/lib/heap.js","webpack://nmrSimulation/./node_modules/util/util.js","webpack://nmrSimulation/./node_modules/process/browser.js","webpack://nmrSimulation/./node_modules/util/support/isBufferBrowser.js","webpack://nmrSimulation/./node_modules/inherits/inherits_browser.js","webpack://nmrSimulation/./node_modules/ml-distance-matrix/src/index.js","webpack://nmrSimulation/./node_modules/ml-hclust/src/diana.js","webpack://nmrSimulation/./node_modules/ml-hash-table/src/HashTable.js","webpack://nmrSimulation/./node_modules/ml-hash-table/src/primeFinder.js","webpack://nmrSimulation/./node_modules/number-is-nan/index.js","webpack://nmrSimulation/./node_modules/nmr-simulation/src/SpinSystem.js","webpack://nmrSimulation/./node_modules/nmr-simulation/src/pauli.js","webpack://nmrSimulation/./node_modules/nmr-simulation/src/simulate1D.js","webpack://nmrSimulation/./node_modules/nmr-simulation/src/simulate2D.js","webpack://nmrSimulation/./node_modules/nmr-simulation/src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","HashTable","require","SparseMatrix","constructor","rows","columns","options","arguments","length","undefined","other","_init","elements","clone","threshold","Array","isArray","matrix","j","Math","abs","set","[object Object]","min","initialCapacity","to2DArray","copy","isSquare","isSymmetric","symmetric","forEachNonZero","v","cardinality","size","row","column","remove","mmul","console","warn","result","v1","k","v2","kroneckerProduct","q","callback","forEachPair","maybeShrinkCapacity","getNonZeros","values","idx","setThreshold","newThreshold","klass","identity","eye","tensorProduct","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","operators","operator","eval","fillTemplateFunction","op","methods","method","forEach","mathMethod","push","template","replace","RegExp","Matrix","Decompositions","DC","abstractMatrix","util","nRows","nColumns","isMatrix","Number","isInteger","super","TypeError","RangeError","concat","rowIndex","columnIndex","newMatrix","species","removeRow","index","checkRowIndex","splice","addRow","array","checkRowVector","removeColumn","checkColumnIndex","addColumn","checkColumnVector","static","outer","max","vector","to1DArray","checkIndices","rowIndices","columnIndices","rowOut","some","columnOut","from","checkRange","startRow","endRow","startColumn","endColumn","slice","arg","getRange","to","arr","sumByRow","sum","zeros","sumByColumn","sumAll","numberIsNan","assertNum","x","asc","a","b","desc","hypotenuse","sqrt","getEmpty2DArray","getFilled2DArray","Heap","Cluster","children","distance","cut","list","ans","aux","shift","group","minGroups","heap","first","pop","child","toArray","traverse","cb","visit","haystack","needle","comparator","low","high","mid","cmp","LuDecomposition","SvDecomposition","arrayUtils","MatrixTransposeView","MatrixRowView","MatrixSubView","MatrixSelectionView","MatrixColumnView","MatrixFlipRowView","MatrixFlipColumnView","superCtor","newRows","newColumns","newData","empty","fill","rng","random","maxValue","floor","data","matrix1","matrix2","checkMatrix","apply","ii","jj","isRowVector","isColumnVector","isVector","Error","repeat","rowRep","colRep","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","swapRows","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","by","mean","prod","cumulativeSum","dot","vector2","vector1","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","y","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","add","sub","scaleRows","scaled","scale","scaleColumns","transpose","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","trace","transposeView","rowView","columnView","flipRowView","flipColumnView","subMatrixView","selectionView","det","subMatrix0","subMatrix1","subMatrix2","determinant","pseudoInverse","EPSILON","svdSolution","autoTranspose","U","leftSingularVectors","V","rightSingularVectors","diagonal","checkDimensions","otherMatrix","rand","negate","inplaceMethodWithArgs","staticMethodWithArgs","inplaceMethodWithOneArgScalar","inplaceMethodWithOneArgMatrix","inplaceMethodWithOneArg","staticMethodWithOneArg","inplaceOp","inplaceOpS","inplaceOpM","staticOp","inplaceMeth","staticMeth","methodsWithArgs","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","LUrowi","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","lowerTriangularMatrix","X","upperTriangularMatrix","pivotPermutationVector","solve","count","SingularValueDecomposition","nu","wantu","wantv","computeLeftSingularVectors","computeRightSingularVectors","swapped","ks","f","cs","sn","kase","sp","spm1","epm1","sk","ek","g","e","work","nct","nrt","pp","eps","pow","tmp","condition","norm2","rank","tol","diagonalMatrix","Y","scols","Ls","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","minMax","arithmeticMean","geometricMean","mul","logMean","lnsum","log","grandMean","means","samples","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","median","half","variance","unbiased","theMean","theVariance","standardDeviation","standardError","robustMeanAndStdev","averageDeviations","stdev","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","itemCount","itemArray","indexOf","covariance","mean1","mean2","cov","skewness","s2","s3","dev","kurtosis","s4","entropy","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","standardize","standardDev","squaredEuclidean","euclidean","squared","ClusterLeaf","inherits","defOptions","out","fullClusterGeneratorVector","conn","clusterList","available","remaining","cluster","nextAv","toInclude","conMat","opt","assign","clList","resultAsMatrix","agnes","diana","for","getEquallySpacedData","SNV","Stat","resultMatrix","coordArrayToPoints","dimensions","pointsArr","point","coordArrayToCoordMatrix","coordinatesArray","points","currentPoint","coordMatrixToCoordArray","coordMatrix","coodinatesArray","coordMatrixToPoints","pointsToCoordArray","pointsToCoordMatrix","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","input","factor","arrayStat","Infinity","l1","l2","dimension","N","theSum","product","theProduct","sum1","sum2","medians","modes","skew","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","correlation","scores","zScores","cor","resultRow","sourceRow","isNaN","weightSum","weightedCovariance","s1","weightedScatter","integral","x0","x1","slope","intercept","reverse","isFinite","numberOfPoints","output","variant","xLength","step","halfStep","lastStep","start","previousX","MAX_VALUE","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","getEquallySpacedSlot","initialOriginalStep","lastOriginalStep","MIN_VALUE","sumAtMin","sumAtMax","getEquallySpacedSmooth","std","BaseView","EigenvalueDecomposition","QrDecomposition","CholeskyDecomposition","leftHandSide","rightHandSide","inv","SVD","EVD","QR","CHO","defaultOptions","assumeSymmetric","h","hh","tred2","dl1","c3","el1","tst1","tql2","H","ort","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","xr","xi","yr","yi","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","qr","rdiag","nrm","Rdiag","isFullRank","orthogonalMatrix","positiveDefinite","Lrowj","Lrowk","L","B","distanceMatrix","simpleLink","cluster1","cluster2","disFun","completeLink","averageLink","centroidLink","dist","wardLink","disFunc","kind","isDistanceMatrix","len","dis","fdistance","sdistance","toFixed","dmin","clustered","filter","diff","obj","indCount","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","lo","hi","item","lastelt","returnitem","_ref","_i","_len","_ref1","_results","_results1","_j","pos","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","clear","insert","top","front","has","process","getOwnPropertyDescriptors","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","isString","objects","inspect","join","str","String","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","val","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","toString","isDate","Date","base","braces","toUTCString","formatProperty","match","formatArray","map","reduce","prev","cur","numLinesEst","reduceToSingleString","split","line","substr","ar","re","objectToString","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","newReason","promisify","original","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","then","nextTick","rej","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","readUInt8","ctor","super_","TempCtor","distanceFn","y1","x2","y2","splitting","Ci","ndist","Cj","intrDist","M","clId","rebel","tree","ind","C","sG","spl","fData","sData","newArray","primeFinder","nextPrime","largestPrime","FREE","FULL","REMOVED","defaultInitialCapacity","defaultMinLoadFactor","defaultMaxLoadFactor","table","state","minLoadFactor","maxLoadFactor","distinct","freeEntries","lowWaterMark","highWaterMark","capacity","chooseHighWaterMark","indexOfKey","indexOfInsertion","newCapacity","chooseGrowCapacity","rehash","noRehash","delete","minLoad","maxLoad","containsKey","decrement","containsValue","indexOfValue","ensureCapacity","minCapacity","oldCapacity","oldTable","oldValues","oldState","newTable","newValues","newState","element","forEachKey","forEachValue","binarySearch","sortAsc","primeNumbers","SpinSystem","chemicalShifts","couplingConstants","multiplicity","nSpins","_initConnectivity","_initClusters","lines","nspins","integrals","ids","jc","tokens","nCoup","predictions","ungroupAtoms","delta","atomIDs","assignment","coupling","prediction","pred","tempPred","parse","nmrJ","tempJ","nbAtoms","clusters","simpleClustering","connectivity","couplings","ones","_calculateBetas","J","frequency","betas","ensureClusterSize","hlClust","_splitCluster","maxClusterSize","_mergeClusters","nClusters","force","_getMembers","members","clusterA","clusterB","common","nElements","createPauli","mult","spin","prjs","A","pauli2","getPauli","smallValue","simulate1d","spinSystem","_options$lineWidth","lineWidth","_options$nbPoints","nbPoints","_options$maxClusterSi","_options$output","_options$frequency","frequencyMHz","_options$noiseFactor","noiseFactor","lineWidthPoints","lnPoints","gaussianLength","gaussian","exp","withNoise","clusterFake","weight","sumI","frequencies","intensities","currentSize","hamiltonian","getHamiltonian","hamSize","evd","diagB","assignmentMatrix","multLen","tempMat","rhoip","rhoip2","tV","triuTimesAbs","valFreq","insertIn","numFreq","inte","addPeak","_getX","freq","height","indexLorentz","conMatrix","clusterHam","A1","B1","alpha","kronProd","pos2","S","A2","B2","kron1","dx","simule2DNmrSpectrum","fromLabel","fromAtomLabel","toLabel","frequencyX","frequencyY","lineWidthX","lineWidthY","symmetrize","sigmaX","sigmaY","minX","fromChemicalShift","maxX","minY","toChemicalShift","maxY","firstX","firstY","lastX","lastY","nbPointsX","nbPointsY","spectraMatrix","peak","unitsToArrayPoints","fromAtoms","toAtoms","widthX","widthY","fromX","round","toX","fromY","toY","squareSigmaX","squareSigmaY","exponent","__webpack_exports__","SpinSystem_SpinSystem"],"mappings":"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","file":"nmr-simulation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nmrSimulation\"] = factory();\n\telse\n\t\troot[\"nmrSimulation\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","const HashTable = require('ml-hash-table');\n\nclass SparseMatrix {\n    constructor(rows, columns, options = {}) {\n        if (rows instanceof SparseMatrix) { // clone\n            const other = rows;\n            this._init(other.rows, other.columns, other.elements.clone(), other.threshold);\n            return;\n        }\n\n        if (Array.isArray(rows)) {\n            const matrix = rows;\n            rows = matrix.length;\n            options = columns || {};\n            columns = matrix[0].length;\n            this._init(rows, columns, new HashTable(options), options.threshold);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = matrix[i][j];\n                    if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n                    if (value !== 0) {\n                        this.elements.set(i * columns + j, matrix[i][j]);\n                    }\n                }\n            }\n        } else {\n            this._init(rows, columns, new HashTable(options), options.threshold);\n        }\n    }\n\n    _init(rows, columns, elements, threshold) {\n        this.rows = rows;\n        this.columns = columns;\n        this.elements = elements;\n        this.threshold = threshold || 0;\n    }\n    \n    static eye(rows = 1, columns = rows) {\n        const min = Math.min(rows, columns);\n        const matrix = new SparseMatrix(rows, columns, {initialCapacity: min});\n        for (var i = 0; i < min; i++) {\n            matrix.set(i, i, 1);\n        }\n        return matrix;\n    }\n\n    clone() {\n        return new SparseMatrix(this);\n    }\n    \n    to2DArray() {\n        const copy = new Array(this.rows);\n        for (var i = 0; i < this.rows; i++) {\n            copy[i] = new Array(this.columns);\n            for (var j = 0; j < this.columns; j++) {\n                copy[i][j] = this.get(i, j);\n            }\n        }\n        return copy;\n    }\n\n    isSquare() {\n        return this.rows === this.columns;\n    }\n\n    isSymmetric() {\n        if (!this.isSquare()) return false;\n\n        var symmetric = true;\n        this.forEachNonZero((i, j, v) => {\n            if (this.get(j, i) !== v) {\n                symmetric = false;\n                return false;\n            }\n            return v;\n        });\n        return symmetric;\n    }\n\n    get cardinality() {\n        return this.elements.size;\n    }\n\n    get size() {\n        return this.rows * this.columns;\n    }\n\n    get(row, column) {\n        return this.elements.get(row * this.columns + column);\n    }\n\n    set(row, column, value) {\n        if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n        if (value === 0) {\n            this.elements.remove(row * this.columns + column);\n        } else {\n            this.elements.set(row * this.columns + column, value);\n        }\n        return this;\n    }\n    \n    mmul(other) {\n        if (this.columns !== other.rows)\n            console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n        \n        const m = this.rows;\n        const p = other.columns;\n        \n        const result = new SparseMatrix(m, p);\n        this.forEachNonZero((i, j, v1) => {\n            other.forEachNonZero((k, l, v2) => {\n                if (j === k) {\n                    result.set(i, l, result.get(i, l) + v1 * v2);\n                }\n                return v2;\n            });\n            return v1;\n        });\n        return result;\n    }\n\n    kroneckerProduct(other) {\n        const m = this.rows;\n        const n = this.columns;\n        const p = other.rows;\n        const q = other.columns;\n\n        const result = new SparseMatrix(m * p, n * q, {\n            initialCapacity: this.cardinality * other.cardinality\n        });\n        this.forEachNonZero((i, j, v1) => {\n            other.forEachNonZero((k, l, v2) => {\n                result.set(p * i + k, q * j + l, v1 * v2);\n                return v2;\n            });\n            return v1;\n        });\n        return result;\n    }\n\n    forEachNonZero(callback) {\n        this.elements.forEachPair((key, value) => {\n            const i = (key / this.columns) | 0;\n            const j = key % this.columns;\n            let r = callback(i, j, value);\n            if (r === false) return false; // stop iteration\n            if (this.threshold && Math.abs(r) < this.threshold) r = 0;\n            if (r !== value) {\n                if (r === 0) {\n                    this.elements.remove(key, true);\n                } else {\n                    this.elements.set(key, r);\n                }\n            }\n            return true;\n        });\n        this.elements.maybeShrinkCapacity();\n        return this;\n    }\n\n    getNonZeros() {\n        const cardinality = this.cardinality;\n        const rows = new Array(cardinality);\n        const columns = new Array(cardinality);\n        const values = new Array(cardinality);\n        var idx = 0;\n        this.forEachNonZero((i, j, value) => {\n            rows[idx] = i;\n            columns[idx] = j;\n            values[idx] = value;\n            idx++;\n            return value;\n        });\n        return {rows, columns, values};\n    }\n\n    setThreshold(newThreshold) {\n        if (newThreshold !== 0 && newThreshold !== this.threshold) {\n            this.threshold = newThreshold;\n            this.forEachNonZero((i, j, v) => v);\n        }\n        return this;\n    }\n}\n\nSparseMatrix.prototype.klass = 'Matrix';\n\nSparseMatrix.identity = SparseMatrix.eye;\nSparseMatrix.prototype.tensorProduct = SparseMatrix.prototype.kroneckerProduct;\n\nmodule.exports = SparseMatrix;\n\n/*\n Add dynamically instance and static methods for mathematical operations\n */\n\nvar inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\nvar inplaceOperatorScalar = `\n(function %name%S(value) {\n    this.forEachNonZero((i, j, v) => v %op% value);\n    return this;\n})\n`;\n\nvar inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix.forEachNonZero((i, j, v) => {\n        this.set(i, j, this.get(i, j) %op% v);\n        return v;\n    });\n    return this;\n})\n`;\n\nvar staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\nvar inplaceMethod = `\n(function %name%() {\n    this.forEachNonZero((i, j, v) => %method%(v));\n    return this;\n})\n`;\n\nvar staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%();\n})\n`;\n\nvar operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n];\n\nfor (var operator of operators) {\n    for (var i = 1; i < operator.length; i++) {\n        SparseMatrix.prototype[operator[i]] = eval(fillTemplateFunction(inplaceOperator, {name: operator[i], op: operator[0]}));\n        SparseMatrix.prototype[operator[i] + 'S'] = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[i] + 'S', op: operator[0]}));\n        SparseMatrix.prototype[operator[i] + 'M'] = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[i] + 'M', op: operator[0]}));\n\n        SparseMatrix[operator[i]] = eval(fillTemplateFunction(staticOperator, {name: operator[i]}));\n    }\n}\n\nvar methods = [\n    ['~', 'not']\n];\n\n[\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n].forEach(function (mathMethod) {\n    methods.push(['Math.' + mathMethod, mathMethod]);\n});\n\nfor (var method of methods) {\n    for (var i = 1; i < method.length; i++) {\n        SparseMatrix.prototype[method[i]] = eval(fillTemplateFunction(inplaceMethod, {name: method[i], method: method[0]}));\n        SparseMatrix[method[i]] = eval(fillTemplateFunction(staticMethod, {name: method[i]}));\n    }\n}\n\nfunction fillTemplateFunction(template, values) {\n    for (var i in values) {\n        template = template.replace(new RegExp('%' + i + '%', 'g'), values[i]);\n    }\n    return template;\n}\n","'use strict';\n\nmodule.exports = require('./matrix').Matrix;\nmodule.exports.Decompositions = module.exports.DC = require('./decompositions');\n","'use strict';\n\nrequire('./symbol-species');\nvar abstractMatrix = require('./abstractMatrix');\nvar util = require('./util');\n\nclass Matrix extends abstractMatrix(Array) {\n    constructor(nRows, nColumns) {\n        var i;\n        if (arguments.length === 1 && typeof nRows === 'number') {\n            return new Array(nRows);\n        }\n        if (Matrix.isMatrix(nRows)) {\n            return nRows.clone();\n        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix\n            super(nRows);\n            if (Number.isInteger(nColumns) && nColumns > 0) {\n                for (i = 0; i < nRows; i++) {\n                    this[i] = new Array(nColumns);\n                }\n            } else {\n                throw new TypeError('nColumns must be a positive integer');\n            }\n        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array\n            const matrix = nRows;\n            nRows = matrix.length;\n            nColumns = matrix[0].length;\n            if (typeof nColumns !== 'number' || nColumns === 0) {\n                throw new TypeError('Data must be a 2D array with at least one element');\n            }\n            super(nRows);\n            for (i = 0; i < nRows; i++) {\n                if (matrix[i].length !== nColumns) {\n                    throw new RangeError('Inconsistent array dimensions');\n                }\n                this[i] = [].concat(matrix[i]);\n            }\n        } else {\n            throw new TypeError('First argument must be a positive number or an array');\n        }\n        this.rows = nRows;\n        this.columns = nColumns;\n        return this;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this[rowIndex][columnIndex] = value;\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this[rowIndex][columnIndex];\n    }\n\n    /**\n     * Creates an exact and independent copy of the matrix\n     * @return {Matrix}\n     */\n    clone() {\n        var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n        for (var row = 0; row < this.rows; row++) {\n            for (var column = 0; column < this.columns; column++) {\n                newMatrix.set(row, column, this.get(row, column));\n            }\n        }\n        return newMatrix;\n    }\n\n    /**\n     * Removes a row from the given index\n     * @param {number} index - Row index\n     * @return {Matrix} this\n     */\n    removeRow(index) {\n        util.checkRowIndex(this, index);\n        if (this.rows === 1) {\n            throw new RangeError('A matrix cannot have less than one row');\n        }\n        this.splice(index, 1);\n        this.rows -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a row at the given index\n     * @param {number} [index = this.rows] - Row index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addRow(index, array) {\n        if (array === undefined) {\n            array = index;\n            index = this.rows;\n        }\n        util.checkRowIndex(this, index, true);\n        array = util.checkRowVector(this, array, true);\n        this.splice(index, 0, array);\n        this.rows += 1;\n        return this;\n    }\n\n    /**\n     * Removes a column from the given index\n     * @param {number} index - Column index\n     * @return {Matrix} this\n     */\n    removeColumn(index) {\n        util.checkColumnIndex(this, index);\n        if (this.columns === 1) {\n            throw new RangeError('A matrix cannot have less than one column');\n        }\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 1);\n        }\n        this.columns -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a column at the given index\n     * @param {number} [index = this.columns] - Column index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addColumn(index, array) {\n        if (typeof array === 'undefined') {\n            array = index;\n            index = this.columns;\n        }\n        util.checkColumnIndex(this, index, true);\n        array = util.checkColumnVector(this, array);\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 0, array[i]);\n        }\n        this.columns += 1;\n        return this;\n    }\n}\n\nexports.Matrix = Matrix;\nMatrix.abstractMatrix = abstractMatrix;\n","'use strict';\n\nvar abstractMatrix = require('../abstractMatrix');\nvar Matrix = require('../matrix');\n\nclass BaseView extends abstractMatrix() {\n    constructor(matrix, rows, columns) {\n        super();\n        this.matrix = matrix;\n        this.rows = rows;\n        this.columns = columns;\n    }\n\n    static get [Symbol.species]() {\n        return Matrix.Matrix;\n    }\n}\n\nmodule.exports = BaseView;\n","'use strict';\n\nvar Matrix = require('./matrix');\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkRowIndex = function checkRowIndex(matrix, index, outer) {\n    var max = outer ? matrix.rows : matrix.rows - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Row index out of range');\n    }\n};\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkColumnIndex = function checkColumnIndex(matrix, index, outer) {\n    var max = outer ? matrix.columns : matrix.columns - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Column index out of range');\n    }\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkRowVector = function checkRowVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.columns) {\n        throw new RangeError('vector size must be the same as the number of columns');\n    }\n    return vector;\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkColumnVector = function checkColumnVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.rows) {\n        throw new RangeError('vector size must be the same as the number of rows');\n    }\n    return vector;\n};\n\nexports.checkIndices = function checkIndices(matrix, rowIndices, columnIndices) {\n    var rowOut = rowIndices.some(r => {\n        return r < 0 || r >= matrix.rows;\n\n    });\n\n    var columnOut = columnIndices.some(c => {\n        return c < 0 || c >= matrix.columns;\n    });\n\n    if (rowOut || columnOut) {\n        throw new RangeError('Indices are out of range');\n    }\n\n    if (typeof rowIndices !== 'object' || typeof columnIndices !== 'object') {\n        throw new TypeError('Unexpected type for row/column indices');\n    }\n    if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n    if (!Array.isArray(columnIndices)) rowIndices = Array.from(columnIndices);\n\n    return {\n        row: rowIndices,\n        column: columnIndices\n    };\n};\n\nexports.checkRange = function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n    if (arguments.length !== 5) throw new TypeError('Invalid argument type');\n    var notAllNumbers = Array.from(arguments).slice(1).some(function (arg) {\n        return typeof arg !== 'number';\n    });\n    if (notAllNumbers) throw new TypeError('Invalid argument type');\n    if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n        throw new RangeError('Submatrix indices are out of range');\n    }\n};\n\nexports.getRange = function getRange(from, to) {\n    var arr = new Array(to - from + 1);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = from + i;\n    }\n    return arr;\n};\n\nexports.sumByRow = function sumByRow(matrix) {\n    var sum = Matrix.Matrix.zeros(matrix.rows, 1);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumByColumn = function sumByColumn(matrix) {\n    var sum = Matrix.Matrix.zeros(1, matrix.columns);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumAll = function sumAll(matrix) {\n    var v = 0;\n    for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n            v += matrix.get(i, j);\n        }\n    }\n    return v;\n};\n","'use strict';\nvar numberIsNan = require('number-is-nan');\n\nfunction assertNum(x) {\n\tif (typeof x !== 'number' || numberIsNan(x)) {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.asc = function (a, b) {\n\tassertNum(a);\n\tassertNum(b);\n\treturn a - b;\n};\n\nexports.desc = function (a, b) {\n\tassertNum(a);\n\tassertNum(b);\n\treturn b - a;\n};\n","'use strict';\n\nexports.hypotenuse = function hypotenuse(a, b) {\n    var r;\n    if (Math.abs(a) > Math.abs(b)) {\n        r = b / a;\n        return Math.abs(a) * Math.sqrt(1 + r * r);\n    }\n    if (b !== 0) {\n        r = a / b;\n        return Math.abs(b) * Math.sqrt(1 + r * r);\n    }\n    return 0;\n};\n\n// For use in the decomposition algorithms. With big matrices, access time is\n// too long on elements from array subclass\n// todo check when it is fixed in v8\n// http://jsperf.com/access-and-write-array-subclass\nexports.getEmpty2DArray = function (rows, columns) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n    }\n    return array;\n};\n\nexports.getFilled2DArray = function (rows, columns, value) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n        for (var j = 0; j < columns; j++) {\n            array[i][j] = value;\n        }\n    }\n    return array;\n};\n","'use strict';\n\nconst Heap = require('heap');\n\nfunction Cluster() {\n    this.children = [];\n    this.distance = -1;\n    this.index = [];\n}\n\n/**\n * Creates an array of values where maximum distance smaller than the threshold\n * @param {number} threshold\n * @return {Array <Cluster>}\n */\nCluster.prototype.cut = function (threshold) {\n    if (threshold < 0) throw new RangeError('Threshold too small');\n    var root = new Cluster();\n    root.children = this.children;\n    root.distance = this.distance;\n    root.index = this.index;\n    var list = [root];\n    var ans = [];\n    while (list.length > 0) {\n        var aux = list.shift();\n        if (threshold >= aux.distance) {\n            ans.push(aux);\n        } else {\n            list = list.concat(aux.children);\n        }\n    }\n    return ans;\n};\n\n/**\n * Merge the leaves in the minimum way to have 'minGroups' number of clusters\n * @param {number} minGroups - Them minimum number of children the first level of the tree should have\n * @return {Cluster}\n */\nCluster.prototype.group = function (minGroups) {\n    if (!Number.isInteger(minGroups) || minGroups < 1) throw new RangeError('Number of groups must be a positive integer');\n\n    const heap = new Heap(function (a, b) {\n        return b.distance - a.distance;\n    });\n\n    heap.push(this);\n\n    while (heap.size() < minGroups) {\n        var first = heap.pop();\n        if (first.children.length === 0) {\n            break;\n        }\n        first.children.forEach(child => heap.push(child));\n    }\n\n    var root = new Cluster();\n    root.children = heap.toArray();\n    root.distance = this.distance;\n\n    return root;\n};\n\n/**\n * Traverses the tree depth-first and provide callback to be called on each individual node\n * @param {function} cb - The callback to be called on each node encounter\n * @type {Cluster}\n */\nCluster.prototype.traverse = function (cb) {\n    function visit(root, callback) {\n        callback(root);\n        if (root.children) {\n            for (var i = root.children.length - 1; i >= 0; i--) {\n                visit(root.children[i], callback);\n            }\n        }\n    }\n    visit(this, cb);\n};\n\nmodule.exports = Cluster;\n","module.exports = newArray\n\nfunction newArray (n, value) {\n  n = n || 0\n  var array = new Array(n)\n  for (var i = 0; i < n; i++) {\n    array[i] = value\n  }\n  return array\n}\n","module.exports = function(haystack, needle, comparator, low, high) {\n  var mid, cmp;\n\n  if(low === undefined)\n    low = 0;\n\n  else {\n    low = low|0;\n    if(low < 0 || low >= haystack.length)\n      throw new RangeError(\"invalid lower bound\");\n  }\n\n  if(high === undefined)\n    high = haystack.length - 1;\n\n  else {\n    high = high|0;\n    if(high < low || high >= haystack.length)\n      throw new RangeError(\"invalid upper bound\");\n  }\n\n  while(low <= high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle, mid, haystack);\n\n    /* Too low. */\n    if(cmp < 0.0)\n      low  = mid + 1;\n\n    /* Too high. */\n    else if(cmp > 0.0)\n      high = mid - 1;\n\n    /* Key found. */\n    else\n      return mid;\n  }\n\n  /* Key not found. */\n  return ~low;\n}\n","'use strict';\n\nmodule.exports = abstractMatrix;\n\nvar LuDecomposition = require('./dc/lu');\nvar SvDecomposition = require('./dc/svd');\nvar arrayUtils = require('ml-array-utils');\nvar util = require('./util');\nvar MatrixTransposeView = require('./views/transpose');\nvar MatrixRowView = require('./views/row');\nvar MatrixSubView = require('./views/sub');\nvar MatrixSelectionView = require('./views/selection');\nvar MatrixColumnView = require('./views/column');\nvar MatrixFlipRowView = require('./views/flipRow');\nvar MatrixFlipColumnView = require('./views/flipColumn');\n\nfunction abstractMatrix(superCtor) {\n    if (superCtor === undefined) superCtor = Object;\n\n    /**\n     * Real matrix\n     * @class Matrix\n     * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n     * 2D array containing the data or Matrix instance to clone\n     * @param {number} [nColumns] - Number of columns of the new matrix\n     */\n    class Matrix extends superCtor {\n        static get [Symbol.species]() {\n            return this;\n        }\n\n        /**\n         * Constructs a Matrix with the chosen dimensions from a 1D array\n         * @param {number} newRows - Number of rows\n         * @param {number} newColumns - Number of columns\n         * @param {Array} newData - A 1D array containing data for the matrix\n         * @return {Matrix} - The new matrix\n         */\n        static from1DArray(newRows, newColumns, newData) {\n            var length = newRows * newColumns;\n            if (length !== newData.length) {\n                throw new RangeError('Data length does not match given dimensions');\n            }\n            var newMatrix = new this(newRows, newColumns);\n            for (var row = 0; row < newRows; row++) {\n                for (var column = 0; column < newColumns; column++) {\n                    newMatrix.set(row, column, newData[row * newColumns + column]);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static rowVector(newData) {\n            var vector = new this(1, newData.length);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(0, i, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static columnVector(newData) {\n            var vector = new this(newData.length, 1);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(i, 0, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static empty(rows, columns) {\n            return new this(rows, columns);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static zeros(rows, columns) {\n            return this.empty(rows, columns).fill(0);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static ones(rows, columns) {\n            return this.empty(rows, columns).fill(1);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static rand(rows, columns, rng) {\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    matrix.set(i, j, rng());\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static randInt(rows, columns, maxValue, rng) {\n            if (maxValue === undefined) maxValue = 1000;\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = Math.floor(rng() * maxValue);\n                    matrix.set(i, j, value);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n        static eye(rows, columns, value) {\n            if (columns === undefined) columns = rows;\n            if (value === undefined) value = 1;\n            var min = Math.min(rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, value);\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n        static diag(data, rows, columns) {\n            var l = data.length;\n            if (rows === undefined) rows = l;\n            if (columns === undefined) columns = rows;\n            var min = Math.min(l, rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, data[i]);\n            }\n            return matrix;\n        }\n\n        /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static min(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static max(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n        static checkMatrix(value) {\n            return Matrix.isMatrix(value) ? value : new this(value);\n        }\n\n        /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n        static isMatrix(value) {\n            return (value != null) && (value.klass === 'Matrix');\n        }\n\n        /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n        get size() {\n            return this.rows * this.columns;\n        }\n\n        /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n        apply(callback) {\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback must be a function');\n            }\n            var ii = this.rows;\n            var jj = this.columns;\n            for (var i = 0; i < ii; i++) {\n                for (var j = 0; j < jj; j++) {\n                    callback.call(this, i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n        to1DArray() {\n            var array = new Array(this.size);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    array[i * this.columns + j] = this.get(i, j);\n                }\n            }\n            return array;\n        }\n\n        /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n        to2DArray() {\n            var copy = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                copy[i] = new Array(this.columns);\n                for (var j = 0; j < this.columns; j++) {\n                    copy[i][j] = this.get(i, j);\n                }\n            }\n            return copy;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row\n         */\n        isRowVector() {\n            return this.rows === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one column\n         */\n        isColumnVector() {\n            return this.columns === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n        isVector() {\n            return (this.rows === 1) || (this.columns === 1);\n        }\n\n        /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n        isSquare() {\n            return this.rows === this.columns;\n        }\n\n        /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n        isSymmetric() {\n            if (this.isSquare()) {\n                for (var i = 0; i < this.rows; i++) {\n                    for (var j = 0; j <= i; j++) {\n                        if (this.get(i, j) !== this.get(j, i)) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n\n        /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n        set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n            throw new Error('set method is unimplemented');\n        }\n\n        /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n        get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n            throw new Error('get method is unimplemented');\n        }\n\n        /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n        repeat(rowRep, colRep) {\n            rowRep = rowRep || 1;\n            colRep = colRep || 1;\n            var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n            for (var i = 0; i < rowRep; i++) {\n                for (var j = 0; j < colRep; j++) {\n                    matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n        fill(value) {\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, value);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n        neg() {\n            return this.mulS(-1);\n        }\n\n        /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n        getRow(index) {\n            util.checkRowIndex(this, index);\n            var row = new Array(this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                row[i] = this.get(index, i);\n            }\n            return row;\n        }\n\n        /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n        getRowVector(index) {\n            return this.constructor.rowVector(this.getRow(index));\n        }\n\n        /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setRow(index, array) {\n            util.checkRowIndex(this, index);\n            array = util.checkRowVector(this, array);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n        swapRows(row1, row2) {\n            util.checkRowIndex(this, row1);\n            util.checkRowIndex(this, row2);\n            for (var i = 0; i < this.columns; i++) {\n                var temp = this.get(row1, i);\n                this.set(row1, i, this.get(row2, i));\n                this.set(row2, i, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n        getColumn(index) {\n            util.checkColumnIndex(this, index);\n            var column = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                column[i] = this.get(i, index);\n            }\n            return column;\n        }\n\n        /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n        getColumnVector(index) {\n            return this.constructor.columnVector(this.getColumn(index));\n        }\n\n        /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setColumn(index, array) {\n            util.checkColumnIndex(this, index);\n            array = util.checkColumnVector(this, array);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n        swapColumns(column1, column2) {\n            util.checkColumnIndex(this, column1);\n            util.checkColumnIndex(this, column2);\n            for (var i = 0; i < this.rows; i++) {\n                var temp = this.get(i, column1);\n                this.set(i, column1, this.get(i, column2));\n                this.set(i, column2, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulRow(index, value) {\n            util.checkRowIndex(this, index);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, this.get(index, i) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulColumn(index, value) {\n            util.checkColumnIndex(this, index);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, this.get(i, index) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n        max() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n        maxIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n        min() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n        minIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        maxRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        maxRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        minRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        minRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        maxColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        maxColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        minColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        minColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n        diag() {\n            var min = Math.min(this.rows, this.columns);\n            var diag = new Array(min);\n            for (var i = 0; i < min; i++) {\n                diag[i] = this.get(i, i);\n            }\n            return diag;\n        }\n\n        /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n        sum(by) {\n            switch (by) {\n                case 'row':\n                    return util.sumByRow(this);\n                case 'column':\n                    return util.sumByColumn(this);\n                default:\n                    return util.sumAll(this);\n            }\n        }\n\n        /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n        mean() {\n            return this.sum() / this.size;\n        }\n\n        /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n        prod() {\n            var prod = 1;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    prod *= this.get(i, j);\n                }\n            }\n            return prod;\n        }\n\n        /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n        cumulativeSum() {\n            var sum = 0;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    sum += this.get(i, j);\n                    this.set(i, j, sum);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n        dot(vector2) {\n            if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n            var vector1 = this.to1DArray();\n            if (vector1.length !== vector2.length) {\n                throw new RangeError('vectors do not have the same size');\n            }\n            var dot = 0;\n            for (var i = 0; i < vector1.length; i++) {\n                dot += vector1[i] * vector2[i];\n            }\n            return dot;\n        }\n\n        /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        mmul(other) {\n            other = this.constructor.checkMatrix(other);\n            if (this.columns !== other.rows) {\n                // eslint-disable-next-line no-console\n                console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n            }\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.columns;\n\n            var result = new this.constructor[Symbol.species](m, p);\n\n            var Bcolj = new Array(n);\n            for (var j = 0; j < p; j++) {\n                for (var k = 0; k < n; k++) {\n                    Bcolj[k] = other.get(k, j);\n                }\n\n                for (var i = 0; i < m; i++) {\n                    var s = 0;\n                    for (k = 0; k < n; k++) {\n                        s += this.get(i, k) * Bcolj[k];\n                    }\n\n                    result.set(i, j, s);\n                }\n            }\n            return result;\n        }\n\n        strassen2x2(other) {\n            var result = new this.constructor[Symbol.species](2, 2);\n            const a11 = this.get(0, 0);\n            const b11 = other.get(0, 0);\n            const a12 = this.get(0, 1);\n            const b12 = other.get(0, 1);\n            const a21 = this.get(1, 0);\n            const b21 = other.get(1, 0);\n            const a22 = this.get(1, 1);\n            const b22 = other.get(1, 1);\n\n            // Compute intermediate values.\n            const m1 = (a11 + a22) * (b11 + b22);\n            const m2 = (a21 + a22) * b11;\n            const m3 = a11 * (b12 - b22);\n            const m4 = a22 * (b21 - b11);\n            const m5 = (a11 + a12) * b22;\n            const m6 = (a21 - a11) * (b11 + b12);\n            const m7 = (a12 - a22) * (b21 + b22);\n\n            // Combine intermediate values into the output.\n            const c00 = m1 + m4 - m5 + m7;\n            const c01 = m3 + m5;\n            const c10 = m2 + m4;\n            const c11 = m1 - m2 + m3 + m6;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            return result;\n        }\n\n        strassen3x3(other) {\n            var result = new this.constructor[Symbol.species](3, 3);\n\n            const a00 = this.get(0, 0);\n            const a01 = this.get(0, 1);\n            const a02 = this.get(0, 2);\n            const a10 = this.get(1, 0);\n            const a11 = this.get(1, 1);\n            const a12 = this.get(1, 2);\n            const a20 = this.get(2, 0);\n            const a21 = this.get(2, 1);\n            const a22 = this.get(2, 2);\n\n            const b00 = other.get(0, 0);\n            const b01 = other.get(0, 1);\n            const b02 = other.get(0, 2);\n            const b10 = other.get(1, 0);\n            const b11 = other.get(1, 1);\n            const b12 = other.get(1, 2);\n            const b20 = other.get(2, 0);\n            const b21 = other.get(2, 1);\n            const b22 = other.get(2, 2);\n\n            const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n            const m2 = (a00 - a10) * (-b01 + b11);\n            const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n            const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n            const m5 = (a10 + a11) * (-b00 + b01);\n            const m6 = a00 * b00;\n            const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n            const m8 = (-a00 + a20) * (b02 - b12);\n            const m9 = (a20 + a21) * (-b00 + b02);\n            const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n            const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n            const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n            const m13 = (a02 - a22) * (b11 - b21);\n            const m14 = a02 * b20;\n            const m15 = (a21 + a22) * (-b20 + b21);\n            const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n            const m17 = (a02 - a12) * (b12 - b22);\n            const m18 = (a11 + a12) * (-b20 + b22);\n            const m19 = a01 * b10;\n            const m20 = a12 * b21;\n            const m21 = a10 * b02;\n            const m22 = a20 * b01;\n            const m23 = a22 * b22;\n\n            const c00 = m6 + m14 + m19;\n            const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n            const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n            const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n            const c11 = m2 + m4 + m5 + m6 + m20;\n            const c12 = m14 + m16 + m17 + m18 + m21;\n            const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n            const c21 = m12 + m13 + m14 + m15 + m22;\n            const c22 = m6 + m7 + m8 + m9 + m23;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(0, 2, c02);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            result.set(1, 2, c12);\n            result.set(2, 0, c20);\n            result.set(2, 1, c21);\n            result.set(2, 2, c22);\n            return result;\n        }\n\n        /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n        mmulStrassen(y) {\n            var x = this.clone();\n            var r1 = x.rows;\n            var c1 = x.columns;\n            var r2 = y.rows;\n            var c2 = y.columns;\n            if (c1 !== r2) {\n                // eslint-disable-next-line no-console\n                console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n            }\n\n            // Put a matrix into the top left of a matrix of zeros.\n            // `rows` and `cols` are the dimensions of the output matrix.\n            function embed(mat, rows, cols) {\n                var r = mat.rows;\n                var c = mat.columns;\n                if ((r === rows) && (c === cols)) {\n                    return mat;\n                } else {\n                    var resultat = Matrix.zeros(rows, cols);\n                    resultat = resultat.setSubMatrix(mat, 0, 0);\n                    return resultat;\n                }\n            }\n\n\n            // Make sure both matrices are the same size.\n            // This is exclusively for simplicity:\n            // this algorithm can be implemented with matrices of different sizes.\n\n            var r = Math.max(r1, r2);\n            var c = Math.max(c1, c2);\n            x = embed(x, r, c);\n            y = embed(y, r, c);\n\n            // Our recursive multiplication function.\n            function blockMult(a, b, rows, cols) {\n                // For small matrices, resort to naive multiplication.\n                if (rows <= 512 || cols <= 512) {\n                    return a.mmul(b); // a is equivalent to this\n                }\n\n                // Apply dynamic padding.\n                if ((rows % 2 === 1) && (cols % 2 === 1)) {\n                    a = embed(a, rows + 1, cols + 1);\n                    b = embed(b, rows + 1, cols + 1);\n                } else if (rows % 2 === 1) {\n                    a = embed(a, rows + 1, cols);\n                    b = embed(b, rows + 1, cols);\n                } else if (cols % 2 === 1) {\n                    a = embed(a, rows, cols + 1);\n                    b = embed(b, rows, cols + 1);\n                }\n\n                var halfRows = parseInt(a.rows / 2);\n                var halfCols = parseInt(a.columns / 2);\n                // Subdivide input matrices.\n                var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n                var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n                var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n                var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n                var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n                var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n                var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n                var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n                // Compute intermediate values.\n                var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n                var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n                var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n                var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n                var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n                var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n                var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n                // Combine intermediate values into the output.\n                var c11 = Matrix.add(m1, m4);\n                c11.sub(m5);\n                c11.add(m7);\n                var c12 = Matrix.add(m3, m5);\n                var c21 = Matrix.add(m2, m4);\n                var c22 = Matrix.sub(m1, m2);\n                c22.add(m3);\n                c22.add(m6);\n\n                //Crop output to the desired size (undo dynamic padding).\n                var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n                resultat = resultat.setSubMatrix(c11, 0, 0);\n                resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n                resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n                resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n                return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n            }\n            return blockMult(x, y, r, c);\n        }\n\n        /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n        scaleRows(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.rows; i++) {\n                var scaled = arrayUtils.scale(this.getRow(i), {min, max});\n                newMatrix.setRow(i, scaled);\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n        scaleColumns(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                var scaled = arrayUtils.scale(this.getColumn(i), {\n                    min: min,\n                    max: max\n                });\n                newMatrix.setColumn(i, scaled);\n            }\n            return newMatrix;\n        }\n\n\n        /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        kroneckerProduct(other) {\n            other = this.constructor.checkMatrix(other);\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.rows;\n            var q = other.columns;\n\n            var result = new this.constructor[Symbol.species](m * p, n * q);\n            for (var i = 0; i < m; i++) {\n                for (var j = 0; j < n; j++) {\n                    for (var k = 0; k < p; k++) {\n                        for (var l = 0; l < q; l++) {\n                            result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n        transpose() {\n            var result = new this.constructor[Symbol.species](this.columns, this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    result.set(j, i, this.get(i, j));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortRows(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.rows; i++) {\n                this.setRow(i, this.getRow(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortColumns(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.columns; i++) {\n                this.setColumn(i, this.getColumn(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n        subMatrix(startRow, endRow, startColumn, endColumn) {\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n            for (var i = startRow; i <= endRow; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n        subMatrixRow(indices, startColumn, endColumn) {\n            if (startColumn === undefined) startColumn = 0;\n            if (endColumn === undefined) endColumn = this.columns - 1;\n            if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.rows) {\n                        throw new RangeError('Row index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n        subMatrixColumn(indices, startRow, endRow) {\n            if (startRow === undefined) startRow = 0;\n            if (endRow === undefined) endRow = this.rows - 1;\n            if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startRow; j <= endRow; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.columns) {\n                        throw new RangeError('Column index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n        setSubMatrix(matrix, startRow, startColumn) {\n            matrix = this.constructor.checkMatrix(matrix);\n            var endRow = startRow + matrix.rows - 1;\n            var endColumn = startColumn + matrix.columns - 1;\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            for (var i = 0; i < matrix.rows; i++) {\n                for (var j = 0; j < matrix.columns; j++) {\n                    this[startRow + i][startColumn + j] = matrix.get(i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n        selection(rowIndices, columnIndices) {\n            var indices = util.checkIndices(this, rowIndices, columnIndices);\n            var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n            for (var i = 0; i < indices.row.length; i++) {\n                var rowIndex = indices.row[i];\n                for (var j = 0; j < indices.column.length; j++) {\n                    var columnIndex = indices.column[j];\n                    newMatrix[i][j] = this.get(rowIndex, columnIndex);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n        trace() {\n            var min = Math.min(this.rows, this.columns);\n            var trace = 0;\n            for (var i = 0; i < min; i++) {\n                trace += this.get(i, i);\n            }\n            return trace;\n        }\n\n        /*\n         Matrix views\n         */\n\n        /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n        transposeView() {\n            return new MatrixTransposeView(this);\n        }\n\n        /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n        rowView(row) {\n            util.checkRowIndex(this, row);\n            return new MatrixRowView(this, row);\n        }\n\n        /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n        columnView(column) {\n            util.checkColumnIndex(this, column);\n            return new MatrixColumnView(this, column);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n        flipRowView() {\n            return new MatrixFlipRowView(this);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n        flipColumnView() {\n            return new MatrixFlipColumnView(this);\n        }\n\n        /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n        subMatrixView(startRow, endRow, startColumn, endColumn) {\n            return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n        }\n\n        /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n        selectionView(rowIndices, columnIndices) {\n            return new MatrixSelectionView(this, rowIndices, columnIndices);\n        }\n\n\n        /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n        det() {\n            if (this.isSquare()) {\n                var a, b, c, d;\n                if (this.columns === 2) {\n                    // 2 x 2 matrix\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(1, 0);\n                    d = this.get(1, 1);\n\n                    return a * d - (b * c);\n                } else if (this.columns === 3) {\n                    // 3 x 3 matrix\n                    var subMatrix0, subMatrix1, subMatrix2;\n                    subMatrix0 = this.selectionView([1, 2], [1, 2]);\n                    subMatrix1 = this.selectionView([1, 2], [0, 2]);\n                    subMatrix2 = this.selectionView([1, 2], [0, 1]);\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(0, 2);\n\n                    return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n                } else {\n                    // general purpose determinant using the LU decomposition\n                    return new LuDecomposition(this).determinant;\n                }\n\n            } else {\n                throw Error('Determinant can only be calculated for a square matrix.');\n            }\n        }\n\n        /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n        pseudoInverse(threshold) {\n            if (threshold === undefined) threshold = Number.EPSILON;\n            var svdSolution = new SvDecomposition(this, {autoTranspose: true});\n\n            var U = svdSolution.leftSingularVectors;\n            var V = svdSolution.rightSingularVectors;\n            var s = svdSolution.diagonal;\n\n            for (var i = 0; i < s.length; i++) {\n                if (Math.abs(s[i]) > threshold) {\n                    s[i] = 1.0 / s[i];\n                } else {\n                    s[i] = 0.0;\n                }\n            }\n\n            // convert list to diagonal\n            s = this.constructor[Symbol.species].diag(s);\n            return V.mmul(s.mmul(U.transposeView()));\n        }\n    }\n\n    Matrix.prototype.klass = 'Matrix';\n\n    /**\n     * @private\n     * Check that two matrices have the same dimensions\n     * @param {Matrix} matrix\n     * @param {Matrix} otherMatrix\n     */\n    function checkDimensions(matrix, otherMatrix) { // eslint-disable-line no-unused-vars\n        if (matrix.rows !== otherMatrix.rows ||\n            matrix.columns !== otherMatrix.columns) {\n            throw new RangeError('Matrices dimensions must be equal');\n        }\n    }\n\n    function compareNumbers(a, b) {\n        return a - b;\n    }\n\n    /*\n     Synonyms\n     */\n\n    Matrix.random = Matrix.rand;\n    Matrix.diagonal = Matrix.diag;\n    Matrix.prototype.diagonal = Matrix.prototype.diag;\n    Matrix.identity = Matrix.eye;\n    Matrix.prototype.negate = Matrix.prototype.neg;\n    Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n    Matrix.prototype.determinant = Matrix.prototype.det;\n\n    /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n    var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n    var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n    var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n    var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n    var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var staticMethodWithOneArg = staticMethodWithArgs;\n\n    var operators = [\n        // Arithmetic operators\n        ['+', 'add'],\n        ['-', 'sub', 'subtract'],\n        ['*', 'mul', 'multiply'],\n        ['/', 'div', 'divide'],\n        ['%', 'mod', 'modulus'],\n        // Bitwise operators\n        ['&', 'and'],\n        ['|', 'or'],\n        ['^', 'xor'],\n        ['<<', 'leftShift'],\n        ['>>', 'signPropagatingRightShift'],\n        ['>>>', 'rightShift', 'zeroFillRightShift']\n    ];\n\n    var i;\n\n    for (var operator of operators) {\n        var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));\n        var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));\n        var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));\n        var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));\n        for (i = 1; i < operator.length; i++) {\n            Matrix.prototype[operator[i]] = inplaceOp;\n            Matrix.prototype[operator[i] + 'S'] = inplaceOpS;\n            Matrix.prototype[operator[i] + 'M'] = inplaceOpM;\n            Matrix[operator[i]] = staticOp;\n        }\n    }\n\n    var methods = [\n        ['~', 'not']\n    ];\n\n    [\n        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n        'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n        'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n    ].forEach(function (mathMethod) {\n        methods.push(['Math.' + mathMethod, mathMethod]);\n    });\n\n    for (var method of methods) {\n        var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));\n        var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));\n        for (i = 1; i < method.length; i++) {\n            Matrix.prototype[method[i]] = inplaceMeth;\n            Matrix[method[i]] = staticMeth;\n        }\n    }\n\n    var methodsWithArgs = [\n        ['Math.pow', 1, 'pow']\n    ];\n\n    for (var methodWithArg of methodsWithArgs) {\n        var args = 'arg0';\n        for (i = 1; i < methodWithArg[1]; i++) {\n            args += `, arg${i}`;\n        }\n        if (methodWithArg[1] !== 1) {\n            var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {\n                name: methodWithArg[2],\n                method: methodWithArg[0],\n                args: args\n            }));\n            var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n                Matrix[methodWithArg[i]] = staticMethWithArgs;\n            }\n        } else {\n            var tmplVar = {\n                name: methodWithArg[2],\n                args: args,\n                method: methodWithArg[0]\n            };\n            var inplaceMethod2 = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n            var inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n            var inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n            var staticMethod2 = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n                Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;\n                Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;\n                Matrix[methodWithArg[i]] = staticMethod2;\n            }\n        }\n    }\n\n    function fillTemplateFunction(template, values) {\n        for (var value in values) {\n            template = template.replace(new RegExp('%' + value + '%', 'g'), values[value]);\n        }\n        return template;\n    }\n\n    return Matrix;\n}\n","'use strict';\n\nvar Matrix = require('../matrix');\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\nfunction LuDecomposition(matrix) {\n    if (!(this instanceof LuDecomposition)) {\n        return new LuDecomposition(matrix);\n    }\n\n    matrix = Matrix.Matrix.checkMatrix(matrix);\n\n    var lu = matrix.clone(),\n        rows = lu.rows,\n        columns = lu.columns,\n        pivotVector = new Array(rows),\n        pivotSign = 1,\n        i, j, k, p, s, t, v,\n        LUrowi, LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n        pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n\n        for (i = 0; i < rows; i++) {\n            LUcolj[i] = lu[i][j];\n        }\n\n        for (i = 0; i < rows; i++) {\n            LUrowi = lu[i];\n            kmax = Math.min(i, j);\n            s = 0;\n            for (k = 0; k < kmax; k++) {\n                s += LUrowi[k] * LUcolj[k];\n            }\n            LUrowi[j] = LUcolj[i] -= s;\n        }\n\n        p = j;\n        for (i = j + 1; i < rows; i++) {\n            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n                p = i;\n            }\n        }\n\n        if (p !== j) {\n            for (k = 0; k < columns; k++) {\n                t = lu[p][k];\n                lu[p][k] = lu[j][k];\n                lu[j][k] = t;\n            }\n\n            v = pivotVector[p];\n            pivotVector[p] = pivotVector[j];\n            pivotVector[j] = v;\n\n            pivotSign = -pivotSign;\n        }\n\n        if (j < rows && lu[j][j] !== 0) {\n            for (i = j + 1; i < rows; i++) {\n                lu[i][j] /= lu[j][j];\n            }\n        }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n}\n\nLuDecomposition.prototype = {\n    isSingular: function () {\n        var data = this.LU,\n            col = data.columns;\n        for (var j = 0; j < col; j++) {\n            if (data[j][j] === 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    get determinant() {\n        var data = this.LU;\n        if (!data.isSquare()) {\n            throw new Error('Matrix must be square');\n        }\n        var determinant = this.pivotSign, col = data.columns;\n        for (var j = 0; j < col; j++) {\n            determinant *= data[j][j];\n        }\n        return determinant;\n    },\n    get lowerTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i > j) {\n                    X[i][j] = data[i][j];\n                } else if (i === j) {\n                    X[i][j] = 1;\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get upperTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i <= j) {\n                    X[i][j] = data[i][j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get pivotPermutationVector() {\n        return this.pivotVector.slice();\n    },\n    solve: function (value) {\n        value = Matrix.Matrix.checkMatrix(value);\n\n        var lu = this.LU,\n            rows = lu.rows;\n\n        if (rows !== value.rows) {\n            throw new Error('Invalid matrix dimensions');\n        }\n        if (this.isSingular()) {\n            throw new Error('LU matrix is singular');\n        }\n\n        var count = value.columns;\n        var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n        var columns = lu.columns;\n        var i, j, k;\n\n        for (k = 0; k < columns; k++) {\n            for (i = k + 1; i < columns; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        for (k = columns - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= lu[k][k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = LuDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix');\nvar util = require('./util');\nvar hypotenuse = util.hypotenuse;\nvar getFilled2DArray = util.getFilled2DArray;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs\nfunction SingularValueDecomposition(value, options) {\n    if (!(this instanceof SingularValueDecomposition)) {\n        return new SingularValueDecomposition(value, options);\n    }\n    value = Matrix.Matrix.checkMatrix(value);\n\n    options = options || {};\n\n    var m = value.rows,\n        n = value.columns,\n        nu = Math.min(m, n);\n\n    var wantu = true, wantv = true;\n    if (options.computeLeftSingularVectors === false) wantu = false;\n    if (options.computeRightSingularVectors === false) wantv = false;\n    var autoTranspose = options.autoTranspose === true;\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n        if (!autoTranspose) {\n            a = value.clone();\n            // eslint-disable-next-line no-console\n            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n        } else {\n            a = value.transpose();\n            m = a.rows;\n            n = a.columns;\n            swapped = true;\n            var aux = wantu;\n            wantu = wantv;\n            wantv = aux;\n        }\n    } else {\n        a = value.clone();\n    }\n\n    var s = new Array(Math.min(m + 1, n)),\n        U = getFilled2DArray(m, nu, 0),\n        V = getFilled2DArray(n, n, 0),\n        e = new Array(n),\n        work = new Array(m);\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n\n    var i, j, k, p, t, ks, f, cs, sn, max, kase,\n        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;\n\n    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {\n        if (k < nct) {\n            s[k] = 0;\n            for (i = k; i < m; i++) {\n                s[k] = hypotenuse(s[k], a[i][k]);\n            }\n            if (s[k] !== 0) {\n                if (a[k][k] < 0) {\n                    s[k] = -s[k];\n                }\n                for (i = k; i < m; i++) {\n                    a[i][k] /= s[k];\n                }\n                a[k][k] += 1;\n            }\n            s[k] = -s[k];\n        }\n\n        for (j = k + 1; j < n; j++) {\n            if ((k < nct) && (s[k] !== 0)) {\n                t = 0;\n                for (i = k; i < m; i++) {\n                    t += a[i][k] * a[i][j];\n                }\n                t = -t / a[k][k];\n                for (i = k; i < m; i++) {\n                    a[i][j] += t * a[i][k];\n                }\n            }\n            e[j] = a[k][j];\n        }\n\n        if (wantu && (k < nct)) {\n            for (i = k; i < m; i++) {\n                U[i][k] = a[i][k];\n            }\n        }\n\n        if (k < nrt) {\n            e[k] = 0;\n            for (i = k + 1; i < n; i++) {\n                e[k] = hypotenuse(e[k], e[i]);\n            }\n            if (e[k] !== 0) {\n                if (e[k + 1] < 0) {\n                    e[k] = 0 - e[k];\n                }\n                for (i = k + 1; i < n; i++) {\n                    e[i] /= e[k];\n                }\n                e[k + 1] += 1;\n            }\n            e[k] = -e[k];\n            if ((k + 1 < m) && (e[k] !== 0)) {\n                for (i = k + 1; i < m; i++) {\n                    work[i] = 0;\n                }\n                for (j = k + 1; j < n; j++) {\n                    for (i = k + 1; i < m; i++) {\n                        work[i] += e[j] * a[i][j];\n                    }\n                }\n                for (j = k + 1; j < n; j++) {\n                    t = -e[j] / e[k + 1];\n                    for (i = k + 1; i < m; i++) {\n                        a[i][j] += t * work[i];\n                    }\n                }\n            }\n            if (wantv) {\n                for (i = k + 1; i < n; i++) {\n                    V[i][k] = e[i];\n                }\n            }\n        }\n    }\n\n    p = Math.min(n, m + 1);\n    if (nct < n) {\n        s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n        s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n        e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n        for (j = nct; j < nu; j++) {\n            for (i = 0; i < m; i++) {\n                U[i][j] = 0;\n            }\n            U[j][j] = 1;\n        }\n        for (k = nct - 1; k >= 0; k--) {\n            if (s[k] !== 0) {\n                for (j = k + 1; j < nu; j++) {\n                    t = 0;\n                    for (i = k; i < m; i++) {\n                        t += U[i][k] * U[i][j];\n                    }\n                    t = -t / U[k][k];\n                    for (i = k; i < m; i++) {\n                        U[i][j] += t * U[i][k];\n                    }\n                }\n                for (i = k; i < m; i++) {\n                    U[i][k] = -U[i][k];\n                }\n                U[k][k] = 1 + U[k][k];\n                for (i = 0; i < k - 1; i++) {\n                    U[i][k] = 0;\n                }\n            } else {\n                for (i = 0; i < m; i++) {\n                    U[i][k] = 0;\n                }\n                U[k][k] = 1;\n            }\n        }\n    }\n\n    if (wantv) {\n        for (k = n - 1; k >= 0; k--) {\n            if ((k < nrt) && (e[k] !== 0)) {\n                for (j = k + 1; j < n; j++) {\n                    t = 0;\n                    for (i = k + 1; i < n; i++) {\n                        t += V[i][k] * V[i][j];\n                    }\n                    t = -t / V[k + 1][k];\n                    for (i = k + 1; i < n; i++) {\n                        V[i][j] += t * V[i][k];\n                    }\n                }\n            }\n            for (i = 0; i < n; i++) {\n                V[i][k] = 0;\n            }\n            V[k][k] = 1;\n        }\n    }\n\n    var pp = p - 1,\n        iter = 0,\n        eps = Math.pow(2, -52);\n    while (p > 0) {\n        for (k = p - 2; k >= -1; k--) {\n            if (k === -1) {\n                break;\n            }\n            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                e[k] = 0;\n                break;\n            }\n        }\n        if (k === p - 2) {\n            kase = 4;\n        } else {\n            for (ks = p - 1; ks >= k; ks--) {\n                if (ks === k) {\n                    break;\n                }\n                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n                if (Math.abs(s[ks]) <= eps * t) {\n                    s[ks] = 0;\n                    break;\n                }\n            }\n            if (ks === k) {\n                kase = 3;\n            } else if (ks === p - 1) {\n                kase = 1;\n            } else {\n                kase = 2;\n                k = ks;\n            }\n        }\n\n        k++;\n\n        switch (kase) {\n            case 1: {\n                f = e[p - 2];\n                e[p - 2] = 0;\n                for (j = p - 2; j >= k; j--) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    if (j !== k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 2 : {\n                f = e[k - 1];\n                e[k - 1] = 0;\n                for (j = k; j < p; j++) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 3 : {\n                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                sp = s[p - 1] / scale;\n                spm1 = s[p - 2] / scale;\n                epm1 = e[p - 2] / scale;\n                sk = s[k] / scale;\n                ek = e[k] / scale;\n                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n                c = (sp * epm1) * (sp * epm1);\n                shift = 0;\n                if ((b !== 0) || (c !== 0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0) {\n                        shift = -shift;\n                    }\n                    shift = c / (b + shift);\n                }\n                f = (sk + sp) * (sk - sp) + shift;\n                g = sk * ek;\n                for (j = k; j < p - 1; j++) {\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    if (j !== k) {\n                        e[j - 1] = t;\n                    }\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n                break;\n            }\n            case 4: {\n                if (s[k] <= 0) {\n                    s[k] = (s[k] < 0 ? -s[k] : 0);\n                    if (wantv) {\n                        for (i = 0; i <= pp; i++) {\n                            V[i][k] = -V[i][k];\n                        }\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1]) {\n                        break;\n                    }\n                    t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n                break;\n            }\n            // no default\n        }\n    }\n\n    if (swapped) {\n        var tmp = V;\n        V = U;\n        U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n}\n\nSingularValueDecomposition.prototype = {\n    get condition() {\n        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    },\n    get norm2() {\n        return this.s[0];\n    },\n    get rank() {\n        var eps = Math.pow(2, -52),\n            tol = Math.max(this.m, this.n) * this.s[0] * eps,\n            r = 0,\n            s = this.s;\n        for (var i = 0, ii = s.length; i < ii; i++) {\n            if (s[i] > tol) {\n                r++;\n            }\n        }\n        return r;\n    },\n    get diagonal() {\n        return this.s;\n    },\n    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n    get threshold() {\n        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];\n    },\n    get leftSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.U)) {\n            this.U = new Matrix.Matrix(this.U);\n        }\n        return this.U;\n    },\n    get rightSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.V)) {\n            this.V = new Matrix.Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        return Matrix.Matrix.diag(this.s);\n    },\n    solve: function (value) {\n\n        var Y = value,\n            e = this.threshold,\n            scols = this.s.length,\n            Ls = Matrix.Matrix.zeros(scols, scols),\n            i;\n\n        for (i = 0; i < scols; i++) {\n            if (Math.abs(this.s[i]) <= e) {\n                Ls[i][i] = 0;\n            } else {\n                Ls[i][i] = 1 / this.s[i];\n            }\n        }\n\n        var U = this.U;\n        var V = this.rightSingularVectors;\n\n        var VL = V.mmul(Ls),\n            vrows = V.rows,\n            urows = U.length,\n            VLU = Matrix.Matrix.zeros(vrows, urows),\n            j, k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < scols; k++) {\n                    sum += VL[i][k] * U[j][k];\n                }\n                VLU[i][j] = sum;\n            }\n        }\n\n        return VLU.mmul(Y);\n    },\n    solveForDiagonal: function (value) {\n        return this.solve(Matrix.Matrix.diag(value));\n    },\n    inverse: function () {\n        var V = this.V;\n        var e = this.threshold,\n            vrows = V.length,\n            vcols = V[0].length,\n            X = new Matrix.Matrix(vrows, this.s.length),\n            i, j;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < vcols; j++) {\n                if (Math.abs(this.s[j]) > e) {\n                    X[i][j] = V[i][j] / this.s[j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n\n        var U = this.U;\n\n        var urows = U.length,\n            ucols = U[0].length,\n            Y = new Matrix.Matrix(vrows, urows),\n            k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < ucols; k++) {\n                    sum += X[i][k] * U[j][k];\n                }\n                Y[i][j] = sum;\n            }\n        }\n\n        return Y;\n    }\n};\n\nmodule.exports = SingularValueDecomposition;\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nfunction squaredEuclidean(p, q) {\n    var d = 0;\n    for (var i = 0; i < p.length; i++) {\n        d += (p[i] - q[i]) * (p[i] - q[i]);\n    }\n    return d;\n}\n\nfunction euclidean(p, q) {\n    return Math.sqrt(squaredEuclidean(p, q));\n}\n\nmodule.exports = euclidean;\neuclidean.squared = squaredEuclidean;\n","'use strict';\n\nconst Cluster = require('./Cluster');\nconst util = require('util');\n\nfunction ClusterLeaf(index) {\n    Cluster.call(this);\n    this.index = index;\n    this.distance = 0;\n    this.children = [];\n}\n\nutil.inherits(ClusterLeaf, Cluster);\n\nmodule.exports = ClusterLeaf;\n","/**\n * Created by acastillo on 8/8/16.\n */\n'use strict';\n\nconst defOptions = {\n    threshold:0,\n    out:\"assignment\"\n};\n//TODO Consider a matrix of distances too\nmodule.exports = function fullClusterGenerator(conMat, opt) {\n    const options = Object.assign({}, defOptions, opt);\n    var clList, i, j, k;\n    if(typeof conMat[0] === \"number\"){\n        clList = fullClusterGeneratorVector(conMat);\n    }\n    else{\n        if(typeof conMat[0] === \"object\"){\n            var nRows = conMat.length;\n            var conn = new Array(nRows*(nRows+1)/2);\n            var index = 0;\n            for(var i=0;i<nRows;i++){\n                for(var j=i;j<nRows;j++){\n                    if(conMat[i][j]>options.threshold)\n                        conn[index++]= 1;\n                    else\n                        conn[index++]= 0;\n                }\n            }\n            clList = fullClusterGeneratorVector(conn);\n        }\n    }\n    if (options.out === \"indexes\" || options.out === \"values\") {\n        var result = new Array(clList.length);\n        for(i=0;i<clList.length;i++){\n            result[i] = [];\n            for(j=0;j<clList[i].length;j++){\n                if(clList[i][j] != 0){\n                    result[i].push(j);\n                }\n            }\n        }\n        if (options.out === \"values\") {\n            var resultAsMatrix = new Array(result.length);\n            for (i = 0; i<result.length;i++){\n                resultAsMatrix[i]=new Array(result[i].length);\n                for(j = 0; j < result[i].length; j++){\n                    resultAsMatrix[i][j]=new Array(result[i].length);\n                    for(k = 0; k < result[i].length; k++){\n                        resultAsMatrix[i][j][k]=conMat[result[i][j]][result[i][k]];\n                    }\n                }\n            }\n            return resultAsMatrix;\n        }\n        else{\n            return result;\n        }\n    }\n\n    return clList;\n\n}\n\nfunction fullClusterGeneratorVector(conn){\n    var nRows = Math.sqrt(conn.length*2+0.25)-0.5;\n    var clusterList = [];\n    var available = new Array(nRows);\n    var remaining = nRows, i=0;\n    var cluster = [];\n    //Mark all the elements as available\n    for(i=nRows-1;i>=0;i--){\n        available[i]=1;\n    }\n    var nextAv=-1;\n    var toInclude = [];\n    while(remaining>0){\n        if(toInclude.length===0){\n            //If there is no more elements to include. Start a new cluster\n            cluster = new Array(nRows);\n            for(i = 0;i < nRows ;i++)\n                cluster[i]=0;\n            clusterList.push(cluster);\n            for(nextAv = 0;available[nextAv]==0;nextAv++){};\n        }\n        else{\n            nextAv=toInclude.splice(0,1);\n        }\n        cluster[nextAv]=1;\n        available[nextAv]=0;\n        remaining--;\n        //Copy the next available row\n        var row = new Array(nRows);\n        for( i = 0;i < nRows;i++){\n            var c=Math.max(nextAv,i);\n            var r=Math.min(nextAv,i);\n            //The element in the conn matrix\n            //console.log(\"index: \"+r*(2*nRows-r-1)/2+c)\n            row[i]=conn[r*(2*nRows-r-1)/2+c];\n            //There is new elements to include in this row?\n            //Then, include it to the current cluster\n            if(row[i]==1&&available[i]==1&&cluster[i]==0){\n                toInclude.push(i);\n                cluster[i]=1;\n            }\n        }\n    }\n    return clusterList;\n}","'use strict';\n\nexports.agnes = require('./agnes');\nexports.diana = require('./diana');\n//exports.birch = require('./birch');\n//exports.cure = require('./cure');\n//exports.chameleon = require('./chameleon');\n","'use strict';\n\nmodule.exports = require('nmr-simulation');\n","'use strict';\n\nif (!Symbol.species) {\n    Symbol.species = Symbol.for('@@species');\n}\n","module.exports = exports = require('./ArrayUtils');\n\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for(var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for(var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for(i = 0; i < array.length; i += dimensions) {\n        for(var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for(var i = 0; i < coordMatrix[0].length; ++i) {\n        for(var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for(var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for(var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for(var i = 0; i < points.length; ++i) {\n        for(var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if(firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options){\n    var y;\n    if(options.inPlace){\n        y = input;\n    }\n    else{\n        y = new Array(input.length);\n    }\n    const max = options.max;\n    const min = options.min;\n    if(typeof max === \"number\"){\n        if(typeof min === \"number\"){\n            var minMax = Stat.minMax(input);\n            var factor = (max - min)/(minMax.max-minMax.min);\n            for(var i=0;i< y.length;i++){\n                y[i]=(input[i]-minMax.min)*factor+min;\n            }\n        }\n        else{\n            var currentMin = Stat.max(input);\n            var factor = max/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    else{\n        if(typeof min === \"number\"){\n            var currentMin = Stat.min(input);\n            var factor = min/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale:scale\n};\n\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options) {\n    if (x.length>1 && x[0]>x[1]) {\n        x=x.slice().reverse();\n        y=y.slice().reverse();\n    }\n\n    var xLength = x.length;\n    if(xLength !== y.length)\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n\n    if (options === undefined) options = {};\n\n    var from = options.from === undefined ? x[0] : options.from\n    if (isNaN(from) || !isFinite(from)) {\n        throw new RangeError(\"'From' value must be a number\");\n    }\n    var to = options.to === undefined ? x[x.length - 1] : options.to;\n    if (isNaN(to) || !isFinite(to)) {\n        throw new RangeError(\"'To' value must be a number\");\n    }\n\n    var reverse = from > to;\n    if(reverse) {\n        var temp = from;\n        from = to;\n        to = temp;\n    }\n\n    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;\n    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {\n        throw new RangeError(\"'Number of points' value must be a number\");\n    }\n    if(numberOfPoints < 1)\n        throw new RangeError(\"the number of point must be higher than 1\");\n\n    var algorithm = options.variant === \"slot\" ? \"slot\" : \"smooth\"; // default value: smooth\n\n    var output = algorithm === \"slot\" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while(true) {\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j] = (sumAtMax - sumAtMin) / step;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        if(previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n        // updating parameters\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope*previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while(true) {\n        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if(backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if(previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)\n            currentPoints--;\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n *\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixTransposeView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.columns, matrix.rows);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(columnIndex, rowIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(columnIndex, rowIndex);\n    }\n}\n\nmodule.exports = MatrixTransposeView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixRowView extends BaseView {\n    constructor(matrix, row) {\n        super(matrix, 1, matrix.columns);\n        this.row = row;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.row, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.row, columnIndex);\n    }\n}\n\nmodule.exports = MatrixRowView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSubView extends BaseView {\n    constructor(matrix, startRow, endRow, startColumn, endColumn) {\n        util.checkRange(matrix, startRow, endRow, startColumn, endColumn);\n        super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n        this.startRow = startRow;\n        this.startColumn = startColumn;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);\n    }\n}\n\nmodule.exports = MatrixSubView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSelectionView extends BaseView {\n    constructor(matrix, rowIndices, columnIndices) {\n        var indices = util.checkIndices(matrix, rowIndices, columnIndices);\n        super(matrix, indices.row.length, indices.column.length);\n        this.rowIndices = indices.row;\n        this.columnIndices = indices.column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n    }\n}\n\nmodule.exports = MatrixSelectionView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixColumnView extends BaseView {\n    constructor(matrix, column) {\n        super(matrix, matrix.rows, 1);\n        this.column = column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.column, value);\n        return this;\n    }\n\n    get(rowIndex) {\n        return this.matrix.get(rowIndex, this.column);\n    }\n}\n\nmodule.exports = MatrixColumnView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipRowView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n    }\n}\n\nmodule.exports = MatrixFlipRowView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipColumnView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n    }\n}\n\nmodule.exports = MatrixFlipColumnView;\n","'use strict';\n\nvar Matrix = require('./matrix').Matrix;\n\nvar SingularValueDecomposition = require('./dc/svd');\nvar EigenvalueDecomposition = require('./dc/evd');\nvar LuDecomposition = require('./dc/lu');\nvar QrDecomposition = require('./dc/qr');\nvar CholeskyDecomposition = require('./dc/cholesky');\n\nfunction inverse(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    return solve(matrix, Matrix.eye(matrix.rows));\n}\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.inverse = Matrix.inv = inverse;\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.prototype.inverse = Matrix.prototype.inv = function () {\n    return inverse(this);\n};\n\nfunction solve(leftHandSide, rightHandSide) {\n    leftHandSide = Matrix.checkMatrix(leftHandSide);\n    rightHandSide = Matrix.checkMatrix(rightHandSide);\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n}\n\nMatrix.solve = solve;\nMatrix.prototype.solve = function (other) {\n    return solve(this, other);\n};\n\nmodule.exports = {\n    SingularValueDecomposition: SingularValueDecomposition,\n    SVD: SingularValueDecomposition,\n    EigenvalueDecomposition: EigenvalueDecomposition,\n    EVD: EigenvalueDecomposition,\n    LuDecomposition: LuDecomposition,\n    LU: LuDecomposition,\n    QrDecomposition: QrDecomposition,\n    QR: QrDecomposition,\n    CholeskyDecomposition: CholeskyDecomposition,\n    CHO: CholeskyDecomposition,\n    inverse: inverse,\n    solve: solve\n};\n","'use strict';\n\nconst Matrix = require('../matrix').Matrix;\nconst util = require('./util');\nconst hypotenuse = util.hypotenuse;\nconst getFilled2DArray = util.getFilled2DArray;\n\nconst defaultOptions = {\n    assumeSymmetric: false\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\nfunction EigenvalueDecomposition(matrix, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (!(this instanceof EigenvalueDecomposition)) {\n        return new EigenvalueDecomposition(matrix, options);\n    }\n    matrix = Matrix.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n        throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns,\n        V = getFilled2DArray(n, n, 0),\n        d = new Array(n),\n        e = new Array(n),\n        value = matrix,\n        i, j;\n\n    var isSymmetric = false;\n    if (options.assumeSymmetric) {\n        isSymmetric = true;\n    } else {\n        isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                V[i][j] = value.get(i, j);\n            }\n        }\n        tred2(n, e, d, V);\n        tql2(n, e, d, V);\n    } else {\n        var H = getFilled2DArray(n, n, 0),\n            ort = new Array(n);\n        for (j = 0; j < n; j++) {\n            for (i = 0; i < n; i++) {\n                H[i][j] = value.get(i, j);\n            }\n        }\n        orthes(n, H, ort, V);\n        hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n}\n\nEigenvalueDecomposition.prototype = {\n    get realEigenvalues() {\n        return this.d;\n    },\n    get imaginaryEigenvalues() {\n        return this.e;\n    },\n    get eigenvectorMatrix() {\n        if (!Matrix.isMatrix(this.V)) {\n            this.V = new Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        var n = this.n,\n            e = this.e,\n            d = this.d,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                X[i][j] = 0;\n            }\n            X[i][i] = d[i];\n            if (e[i] > 0) {\n                X[i][i + 1] = e[i];\n            } else if (e[i] < 0) {\n                X[i][i - 1] = e[i];\n            }\n        }\n        return X;\n    }\n};\n\nfunction tred2(n, e, d, V) {\n\n    var f, g, h, i, j, k,\n        hh, scale;\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n    }\n\n    for (i = n - 1; i > 0; i--) {\n        scale = 0;\n        h = 0;\n        for (k = 0; k < i; k++) {\n            scale = scale + Math.abs(d[k]);\n        }\n\n        if (scale === 0) {\n            e[i] = d[i - 1];\n            for (j = 0; j < i; j++) {\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n                V[j][i] = 0;\n            }\n        } else {\n            for (k = 0; k < i; k++) {\n                d[k] /= scale;\n                h += d[k] * d[k];\n            }\n\n            f = d[i - 1];\n            g = Math.sqrt(h);\n            if (f > 0) {\n                g = -g;\n            }\n\n            e[i] = scale * g;\n            h = h - f * g;\n            d[i - 1] = f - g;\n            for (j = 0; j < i; j++) {\n                e[j] = 0;\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                V[j][i] = f;\n                g = e[j] + V[j][j] * f;\n                for (k = j + 1; k <= i - 1; k++) {\n                    g += V[k][j] * d[k];\n                    e[k] += V[k][j] * f;\n                }\n                e[j] = g;\n            }\n\n            f = 0;\n            for (j = 0; j < i; j++) {\n                e[j] /= h;\n                f += e[j] * d[j];\n            }\n\n            hh = f / (h + h);\n            for (j = 0; j < i; j++) {\n                e[j] -= hh * d[j];\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                g = e[j];\n                for (k = j; k <= i - 1; k++) {\n                    V[k][j] -= (f * e[k] + g * d[k]);\n                }\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n            }\n        }\n        d[i] = h;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        V[n - 1][i] = V[i][i];\n        V[i][i] = 1;\n        h = d[i + 1];\n        if (h !== 0) {\n            for (k = 0; k <= i; k++) {\n                d[k] = V[k][i + 1] / h;\n            }\n\n            for (j = 0; j <= i; j++) {\n                g = 0;\n                for (k = 0; k <= i; k++) {\n                    g += V[k][i + 1] * V[k][j];\n                }\n                for (k = 0; k <= i; k++) {\n                    V[k][j] -= g * d[k];\n                }\n            }\n        }\n\n        for (k = 0; k <= i; k++) {\n            V[k][i + 1] = 0;\n        }\n    }\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n        V[n - 1][j] = 0;\n    }\n\n    V[n - 1][n - 1] = 1;\n    e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n\n    var g, h, i, j, k, l, m, p, r,\n        dl1, c, c2, c3, el1, s, s2,\n        iter;\n\n    for (i = 1; i < n; i++) {\n        e[i - 1] = e[i];\n    }\n\n    e[n - 1] = 0;\n\n    var f = 0,\n        tst1 = 0,\n        eps = Math.pow(2, -52);\n\n    for (l = 0; l < n; l++) {\n        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n        m = l;\n        while (m < n) {\n            if (Math.abs(e[m]) <= eps * tst1) {\n                break;\n            }\n            m++;\n        }\n\n        if (m > l) {\n            iter = 0;\n            do {\n                iter = iter + 1;\n\n                g = d[l];\n                p = (d[l + 1] - g) / (2 * e[l]);\n                r = hypotenuse(p, 1);\n                if (p < 0) {\n                    r = -r;\n                }\n\n                d[l] = e[l] / (p + r);\n                d[l + 1] = e[l] * (p + r);\n                dl1 = d[l + 1];\n                h = g - d[l];\n                for (i = l + 2; i < n; i++) {\n                    d[i] -= h;\n                }\n\n                f = f + h;\n\n                p = d[m];\n                c = 1;\n                c2 = c;\n                c3 = c;\n                el1 = e[l + 1];\n                s = 0;\n                s2 = 0;\n                for (i = m - 1; i >= l; i--) {\n                    c3 = c2;\n                    c2 = c;\n                    s2 = s;\n                    g = c * e[i];\n                    h = c * p;\n                    r = hypotenuse(p, e[i]);\n                    e[i + 1] = s * r;\n                    s = e[i] / r;\n                    c = p / r;\n                    p = c * d[i] - s * g;\n                    d[i + 1] = h + s * (c * g + s * d[i]);\n\n                    for (k = 0; k < n; k++) {\n                        h = V[k][i + 1];\n                        V[k][i + 1] = s * V[k][i] + c * h;\n                        V[k][i] = c * V[k][i] - s * h;\n                    }\n                }\n\n                p = -s * s2 * c3 * el1 * e[l] / dl1;\n                e[l] = s * p;\n                d[l] = c * p;\n\n            }\n            while (Math.abs(e[l]) > eps * tst1);\n        }\n        d[l] = d[l] + f;\n        e[l] = 0;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        k = i;\n        p = d[i];\n        for (j = i + 1; j < n; j++) {\n            if (d[j] < p) {\n                k = j;\n                p = d[j];\n            }\n        }\n\n        if (k !== i) {\n            d[k] = d[i];\n            d[i] = p;\n            for (j = 0; j < n; j++) {\n                p = V[j][i];\n                V[j][i] = V[j][k];\n                V[j][k] = p;\n            }\n        }\n    }\n}\n\nfunction orthes(n, H, ort, V) {\n\n    var low = 0,\n        high = n - 1,\n        f, g, h, i, j, m,\n        scale;\n\n    for (m = low + 1; m <= high - 1; m++) {\n        scale = 0;\n        for (i = m; i <= high; i++) {\n            scale = scale + Math.abs(H[i][m - 1]);\n        }\n\n        if (scale !== 0) {\n            h = 0;\n            for (i = high; i >= m; i--) {\n                ort[i] = H[i][m - 1] / scale;\n                h += ort[i] * ort[i];\n            }\n\n            g = Math.sqrt(h);\n            if (ort[m] > 0) {\n                g = -g;\n            }\n\n            h = h - ort[m] * g;\n            ort[m] = ort[m] - g;\n\n            for (j = m; j < n; j++) {\n                f = 0;\n                for (i = high; i >= m; i--) {\n                    f += ort[i] * H[i][j];\n                }\n\n                f = f / h;\n                for (i = m; i <= high; i++) {\n                    H[i][j] -= f * ort[i];\n                }\n            }\n\n            for (i = 0; i <= high; i++) {\n                f = 0;\n                for (j = high; j >= m; j--) {\n                    f += ort[j] * H[i][j];\n                }\n\n                f = f / h;\n                for (j = m; j <= high; j++) {\n                    H[i][j] -= f * ort[j];\n                }\n            }\n\n            ort[m] = scale * ort[m];\n            H[m][m - 1] = scale * g;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            V[i][j] = (i === j ? 1 : 0);\n        }\n    }\n\n    for (m = high - 1; m >= low + 1; m--) {\n        if (H[m][m - 1] !== 0) {\n            for (i = m + 1; i <= high; i++) {\n                ort[i] = H[i][m - 1];\n            }\n\n            for (j = m; j <= high; j++) {\n                g = 0;\n                for (i = m; i <= high; i++) {\n                    g += ort[i] * V[i][j];\n                }\n\n                g = (g / ort[m]) / H[m][m - 1];\n                for (i = m; i <= high; i++) {\n                    V[i][j] += g * ort[i];\n                }\n            }\n        }\n    }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n    var n = nn - 1,\n        low = 0,\n        high = nn - 1,\n        eps = Math.pow(2, -52),\n        exshift = 0,\n        norm = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        z = 0,\n        iter = 0,\n        i, j, k, l, m, t, w, x, y,\n        ra, sa, vr, vi,\n        notlast, cdivres;\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            d[i] = H[i][i];\n            e[i] = 0;\n        }\n\n        for (j = Math.max(i - 1, 0); j < nn; j++) {\n            norm = norm + Math.abs(H[i][j]);\n        }\n    }\n\n    while (n >= low) {\n        l = n;\n        while (l > low) {\n            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n            if (s === 0) {\n                s = norm;\n            }\n            if (Math.abs(H[l][l - 1]) < eps * s) {\n                break;\n            }\n            l--;\n        }\n\n        if (l === n) {\n            H[n][n] = H[n][n] + exshift;\n            d[n] = H[n][n];\n            e[n] = 0;\n            n--;\n            iter = 0;\n        } else if (l === n - 1) {\n            w = H[n][n - 1] * H[n - 1][n];\n            p = (H[n - 1][n - 1] - H[n][n]) / 2;\n            q = p * p + w;\n            z = Math.sqrt(Math.abs(q));\n            H[n][n] = H[n][n] + exshift;\n            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n            x = H[n][n];\n\n            if (q >= 0) {\n                z = (p >= 0) ? (p + z) : (p - z);\n                d[n - 1] = x + z;\n                d[n] = d[n - 1];\n                if (z !== 0) {\n                    d[n] = x - w / z;\n                }\n                e[n - 1] = 0;\n                e[n] = 0;\n                x = H[n][n - 1];\n                s = Math.abs(x) + Math.abs(z);\n                p = x / s;\n                q = z / s;\n                r = Math.sqrt(p * p + q * q);\n                p = p / r;\n                q = q / r;\n\n                for (j = n - 1; j < nn; j++) {\n                    z = H[n - 1][j];\n                    H[n - 1][j] = q * z + p * H[n][j];\n                    H[n][j] = q * H[n][j] - p * z;\n                }\n\n                for (i = 0; i <= n; i++) {\n                    z = H[i][n - 1];\n                    H[i][n - 1] = q * z + p * H[i][n];\n                    H[i][n] = q * H[i][n] - p * z;\n                }\n\n                for (i = low; i <= high; i++) {\n                    z = V[i][n - 1];\n                    V[i][n - 1] = q * z + p * V[i][n];\n                    V[i][n] = q * V[i][n] - p * z;\n                }\n            } else {\n                d[n - 1] = x + p;\n                d[n] = x + p;\n                e[n - 1] = z;\n                e[n] = -z;\n            }\n\n            n = n - 2;\n            iter = 0;\n        } else {\n            x = H[n][n];\n            y = 0;\n            w = 0;\n            if (l < n) {\n                y = H[n - 1][n - 1];\n                w = H[n][n - 1] * H[n - 1][n];\n            }\n\n            if (iter === 10) {\n                exshift += x;\n                for (i = low; i <= n; i++) {\n                    H[i][i] -= x;\n                }\n                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n                x = y = 0.75 * s;\n                w = -0.4375 * s * s;\n            }\n\n            if (iter === 30) {\n                s = (y - x) / 2;\n                s = s * s + w;\n                if (s > 0) {\n                    s = Math.sqrt(s);\n                    if (y < x) {\n                        s = -s;\n                    }\n                    s = x - w / ((y - x) / 2 + s);\n                    for (i = low; i <= n; i++) {\n                        H[i][i] -= s;\n                    }\n                    exshift += s;\n                    x = y = w = 0.964;\n                }\n            }\n\n            iter = iter + 1;\n\n            m = n - 2;\n            while (m >= l) {\n                z = H[m][m];\n                r = x - z;\n                s = y - z;\n                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n                q = H[m + 1][m + 1] - z - r - s;\n                r = H[m + 2][m + 1];\n                s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                p = p / s;\n                q = q / s;\n                r = r / s;\n                if (m === l) {\n                    break;\n                }\n                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {\n                    break;\n                }\n                m--;\n            }\n\n            for (i = m + 2; i <= n; i++) {\n                H[i][i - 2] = 0;\n                if (i > m + 2) {\n                    H[i][i - 3] = 0;\n                }\n            }\n\n            for (k = m; k <= n - 1; k++) {\n                notlast = (k !== n - 1);\n                if (k !== m) {\n                    p = H[k][k - 1];\n                    q = H[k + 1][k - 1];\n                    r = (notlast ? H[k + 2][k - 1] : 0);\n                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                    if (x !== 0) {\n                        p = p / x;\n                        q = q / x;\n                        r = r / x;\n                    }\n                }\n\n                if (x === 0) {\n                    break;\n                }\n\n                s = Math.sqrt(p * p + q * q + r * r);\n                if (p < 0) {\n                    s = -s;\n                }\n\n                if (s !== 0) {\n                    if (k !== m) {\n                        H[k][k - 1] = -s * x;\n                    } else if (l !== m) {\n                        H[k][k - 1] = -H[k][k - 1];\n                    }\n\n                    p = p + s;\n                    x = p / s;\n                    y = q / s;\n                    z = r / s;\n                    q = q / p;\n                    r = r / p;\n\n                    for (j = k; j < nn; j++) {\n                        p = H[k][j] + q * H[k + 1][j];\n                        if (notlast) {\n                            p = p + r * H[k + 2][j];\n                            H[k + 2][j] = H[k + 2][j] - p * z;\n                        }\n\n                        H[k][j] = H[k][j] - p * x;\n                        H[k + 1][j] = H[k + 1][j] - p * y;\n                    }\n\n                    for (i = 0; i <= Math.min(n, k + 3); i++) {\n                        p = x * H[i][k] + y * H[i][k + 1];\n                        if (notlast) {\n                            p = p + z * H[i][k + 2];\n                            H[i][k + 2] = H[i][k + 2] - p * r;\n                        }\n\n                        H[i][k] = H[i][k] - p;\n                        H[i][k + 1] = H[i][k + 1] - p * q;\n                    }\n\n                    for (i = low; i <= high; i++) {\n                        p = x * V[i][k] + y * V[i][k + 1];\n                        if (notlast) {\n                            p = p + z * V[i][k + 2];\n                            V[i][k + 2] = V[i][k + 2] - p * r;\n                        }\n\n                        V[i][k] = V[i][k] - p;\n                        V[i][k + 1] = V[i][k + 1] - p * q;\n                    }\n                }\n            }\n        }\n    }\n\n    if (norm === 0) {\n        return;\n    }\n\n    for (n = nn - 1; n >= 0; n--) {\n        p = d[n];\n        q = e[n];\n\n        if (q === 0) {\n            l = n;\n            H[n][n] = 1;\n            for (i = n - 1; i >= 0; i--) {\n                w = H[i][i] - p;\n                r = 0;\n                for (j = l; j <= n; j++) {\n                    r = r + H[i][j] * H[j][n];\n                }\n\n                if (e[i] < 0) {\n                    z = w;\n                    s = r;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n                        t = (x * s - z * r) / q;\n                        H[i][n] = t;\n                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);\n                    }\n\n                    t = Math.abs(H[i][n]);\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        } else if (q < 0) {\n            l = n - 1;\n\n            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n                H[n - 1][n - 1] = q / H[n][n - 1];\n                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n            } else {\n                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n                H[n - 1][n - 1] = cdivres[0];\n                H[n - 1][n] = cdivres[1];\n            }\n\n            H[n][n - 1] = 0;\n            H[n][n] = 1;\n            for (i = n - 2; i >= 0; i--) {\n                ra = 0;\n                sa = 0;\n                for (j = l; j <= n; j++) {\n                    ra = ra + H[i][j] * H[j][n - 1];\n                    sa = sa + H[i][j] * H[j][n];\n                }\n\n                w = H[i][i] - p;\n\n                if (e[i] < 0) {\n                    z = w;\n                    r = ra;\n                    s = sa;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        cdivres = cdiv(-ra, -sa, w, q);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n                        vi = (d[i] - p) * 2 * q;\n                        if (vr === 0 && vi === 0) {\n                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));\n                        }\n                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {\n                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n                        } else {\n                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n                            H[i + 1][n - 1] = cdivres[0];\n                            H[i + 1][n] = cdivres[1];\n                        }\n                    }\n\n                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n - 1] = H[j][n - 1] / t;\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            for (j = i; j < nn; j++) {\n                V[i][j] = H[i][j];\n            }\n        }\n    }\n\n    for (j = nn - 1; j >= low; j--) {\n        for (i = low; i <= high; i++) {\n            z = 0;\n            for (k = low; k <= Math.min(j, high); k++) {\n                z = z + V[i][k] * H[k][j];\n            }\n            V[i][j] = z;\n        }\n    }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n    var r, d;\n    if (Math.abs(yr) > Math.abs(yi)) {\n        r = yi / yr;\n        d = yr + r * yi;\n        return [(xr + r * xi) / d, (xi - r * xr) / d];\n    } else {\n        r = yr / yi;\n        d = yi + r * yr;\n        return [(r * xr + xi) / d, (r * xi - xr) / d];\n    }\n}\n\nmodule.exports = EigenvalueDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\nvar hypotenuse = require('./util').hypotenuse;\n\n//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\nfunction QrDecomposition(value) {\n    if (!(this instanceof QrDecomposition)) {\n        return new QrDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n\n    var qr = value.clone(),\n        m = value.rows,\n        n = value.columns,\n        rdiag = new Array(n),\n        i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n        var nrm = 0;\n        for (i = k; i < m; i++) {\n            nrm = hypotenuse(nrm, qr[i][k]);\n        }\n        if (nrm !== 0) {\n            if (qr[k][k] < 0) {\n                nrm = -nrm;\n            }\n            for (i = k; i < m; i++) {\n                qr[i][k] /= nrm;\n            }\n            qr[k][k] += 1;\n            for (j = k + 1; j < n; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * qr[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    qr[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n}\n\nQrDecomposition.prototype = {\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var qr = this.QR,\n            m = qr.rows;\n\n        if (value.rows !== m) {\n            throw new Error('Matrix row dimensions must agree');\n        }\n        if (!this.isFullRank()) {\n            throw new Error('Matrix is rank deficient');\n        }\n\n        var count = value.columns;\n        var X = value.clone();\n        var n = qr.columns;\n        var i, j, k, s;\n\n        for (k = 0; k < n; k++) {\n            for (j = 0; j < count; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * X[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    X[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        for (k = n - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= this.Rdiag[k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * qr[i][k];\n                }\n            }\n        }\n\n        return X.subMatrix(0, n - 1, 0, count - 1);\n    },\n    isFullRank: function () {\n        var columns = this.QR.columns;\n        for (var i = 0; i < columns; i++) {\n            if (this.Rdiag[i] === 0) {\n                return false;\n            }\n        }\n        return true;\n    },\n    get upperTriangularMatrix() {\n        var qr = this.QR,\n            n = qr.columns,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (i < j) {\n                    X[i][j] = qr[i][j];\n                } else if (i === j) {\n                    X[i][j] = this.Rdiag[i];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get orthogonalMatrix() {\n        var qr = this.QR,\n            rows = qr.rows,\n            columns = qr.columns,\n            X = new Matrix(rows, columns),\n            i, j, k, s;\n\n        for (k = columns - 1; k >= 0; k--) {\n            for (i = 0; i < rows; i++) {\n                X[i][k] = 0;\n            }\n            X[k][k] = 1;\n            for (j = k; j < columns; j++) {\n                if (qr[k][k] !== 0) {\n                    s = 0;\n                    for (i = k; i < rows; i++) {\n                        s += qr[i][k] * X[i][j];\n                    }\n\n                    s = -s / qr[k][k];\n\n                    for (i = k; i < rows; i++) {\n                        X[i][j] += s * qr[i][k];\n                    }\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = QrDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\nfunction CholeskyDecomposition(value) {\n    if (!(this instanceof CholeskyDecomposition)) {\n        return new CholeskyDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n    if (!value.isSymmetric()) {\n        throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value,\n        dimension = a.rows,\n        l = new Matrix(dimension, dimension),\n        positiveDefinite = true,\n        i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n        var Lrowj = l[j];\n        var d = 0;\n        for (k = 0; k < j; k++) {\n            var Lrowk = l[k];\n            var s = 0;\n            for (i = 0; i < k; i++) {\n                s += Lrowk[i] * Lrowj[i];\n            }\n            Lrowj[k] = s = (a[j][k] - s) / l[k][k];\n            d = d + s * s;\n        }\n\n        d = a[j][j] - d;\n\n        positiveDefinite &= (d > 0);\n        l[j][j] = Math.sqrt(Math.max(d, 0));\n        for (k = j + 1; k < dimension; k++) {\n            l[j][k] = 0;\n        }\n    }\n\n    if (!positiveDefinite) {\n        throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n}\n\nCholeskyDecomposition.prototype = {\n    get lowerTriangularMatrix() {\n        return this.L;\n    },\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var l = this.L,\n            dimension = l.rows;\n\n        if (value.rows !== dimension) {\n            throw new Error('Matrix dimensions do not match');\n        }\n\n        var count = value.columns,\n            B = value.clone(),\n            i, j, k;\n\n        for (k = 0; k < dimension; k++) {\n            for (j = 0; j < count; j++) {\n                for (i = 0; i < k; i++) {\n                    B[k][j] -= B[i][j] * l[k][i];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        for (k = dimension - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                for (i = k + 1; i < dimension; i++) {\n                    B[k][j] -= B[i][j] * l[i][k];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        return B;\n    }\n};\n\nmodule.exports = CholeskyDecomposition;\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\nconst ClusterLeaf = require('./ClusterLeaf');\nconst Cluster = require('./Cluster');\nconst distanceMatrix = require('ml-distance-matrix');\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction simpleLink(cluster1, cluster2, disFun) {\n    var m = 10e100;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            var d = disFun[cluster1[i]][ cluster2[j]];\n            m = Math.min(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction completeLink(cluster1, cluster2, disFun) {\n    var m = -1;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            var d = disFun[cluster1[i]][ cluster2[j]];\n            m = Math.max(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction averageLink(cluster1, cluster2, disFun) {\n    var m = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            m += disFun[cluster1[i]][ cluster2[j]];\n        }\n    }\n    return m / (cluster1.length * cluster2.length);\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {*}\n */\nfunction centroidLink(cluster1, cluster2, disFun) {\n    var dist = new Array(cluster1.length * cluster2.length);\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            dist[i * cluster2.length + j] = (disFun[cluster1[i]][ cluster2[j]]);\n        }\n    }\n    return median(dist);\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction wardLink(cluster1, cluster2, disFun) {\n    return centroidLink(cluster1, cluster2, disFun)\n        * cluster1.length * cluster2.length / (cluster1.length + cluster2.length);\n}\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nfunction median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n}\n\nvar defaultOptions = {\n    disFunc: euclidean,\n    kind: 'single',\n    isDistanceMatrix: false\n\n};\n\n/**\n * Continuously merge nodes that have the least dissimilarity\n * @param {Array <Array <number>>} distance - Array of points to be clustered\n * @param {json} options\n * @option isDistanceMatrix: Is the input a distance matrix?\n * @constructor\n */\nfunction agnes(data, options) {\n    options = Object.assign({}, defaultOptions, options);\n    var len = data.length;\n    var distance = data;//If source\n    if (!options.isDistanceMatrix) {\n        distance = distanceMatrix(data, options.disFunc);\n    }\n\n\n    // allows to use a string or a given function\n    if (typeof options.kind === 'string') {\n        switch (options.kind) {\n            case 'single':\n                options.kind = simpleLink;\n                break;\n            case 'complete':\n                options.kind = completeLink;\n                break;\n            case 'average':\n                options.kind = averageLink;\n                break;\n            case 'centroid':\n                options.kind = centroidLink;\n                break;\n            case 'ward':\n                options.kind = wardLink;\n                break;\n            default:\n                throw new RangeError('Unknown kind of similarity');\n        }\n    } else if (typeof options.kind !== 'function') {\n        throw new TypeError('Undefined kind of similarity');\n    }\n\n    var list = new Array(len);\n    for (var i = 0; i < distance.length; i++) {\n        list[i] = new ClusterLeaf(i);\n    }\n    var min = 10e5,\n        d = {},\n        dis = 0;\n\n    while (list.length > 1) {\n        // calculates the minimum distance\n        d = {};\n        min = 10e5;\n        for (var j = 0; j < list.length; j++) {\n            for (var k = j + 1; k < list.length; k++) {\n                var fdistance, sdistance;\n                if (list[j] instanceof ClusterLeaf) {\n                    fdistance = [list[j].index];\n                } else {\n                    fdistance = new Array(list[j].index.length);\n                    for (var e = 0; e < fdistance.length; e++) {\n                        fdistance[e] = list[j].index[e].index;\n                    }\n                }\n                if (list[k] instanceof ClusterLeaf) {\n                    sdistance = [list[k].index];\n                } else {\n                    sdistance = new Array(list[k].index.length);\n                    for (var f = 0; f < sdistance.length; f++) {\n                        sdistance[f] = list[k].index[f].index;\n                    }\n                }\n                dis = options.kind(fdistance, sdistance, distance).toFixed(4);\n                if (dis in d) {\n                    d[dis].push([list[j], list[k]]);\n                } else {\n                    d[dis] = [[list[j], list[k]]];\n                }\n                min = Math.min(dis, min);\n            }\n        }\n        // cluster dots\n        var dmin = d[min.toFixed(4)];\n        var clustered = new Array(dmin.length);\n        var aux,\n            count = 0;\n        while (dmin.length > 0) {\n            aux = dmin.shift();\n            for (var q = 0; q < dmin.length; q++) {\n                var int = dmin[q].filter(function (n) {\n                    //noinspection JSReferencingMutableVariableFromClosure\n                    return aux.indexOf(n) !== -1;\n                });\n                if (int.length > 0) {\n                    var diff = dmin[q].filter(function (n) {\n                        //noinspection JSReferencingMutableVariableFromClosure\n                        return aux.indexOf(n) === -1;\n                    });\n                    aux = aux.concat(diff);\n                    dmin.splice(q--, 1);\n                }\n            }\n            clustered[count++] = aux;\n        }\n        clustered.length = count;\n\n        for (var ii = 0; ii < clustered.length; ii++) {\n            var obj = new Cluster();\n            obj.children = clustered[ii].concat();\n            obj.distance = min;\n            obj.index = new Array(len);\n            var indCount = 0;\n            for (var jj = 0; jj < clustered[ii].length; jj++) {\n                if (clustered[ii][jj] instanceof ClusterLeaf) {\n                    obj.index[indCount++] = clustered[ii][jj];\n                } else {\n                    indCount += clustered[ii][jj].index.length;\n                    obj.index = clustered[ii][jj].index.concat(obj.index);\n                }\n                list.splice((list.indexOf(clustered[ii][jj])), 1);\n            }\n            obj.index.length = indCount;\n            list.push(obj);\n        }\n    }\n    return list[0];\n}\n\nmodule.exports = agnes;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\n\n/**\n * Computes a distance/similarity matrix given an array of data and a distance/similarity function.\n * @param {Array} data An array of data\n * @param {function} distanceFn  A function that accepts two arguments and computes a distance/similarity between them\n * @return {Array<Array>} The similarity matrix. The similarity matrix is square and has a size equal to the length of\n * the data array\n */\nfunction distanceMatrix(data, distanceFn) {\n    const length = data.length;\n    let result = Array.from({length}).map(() => Array.from({length}));\n\n    // Compute upper distance matrix\n    for (let i = 0; i < length; i++) {\n        for (let j = 0; j <= i; j++) {\n            result[i][j] = distanceFn(data[i], data[j]);\n        }\n    }\n\n    // Copy to lower distance matrix\n    for (let i = 0; i < length; i++) {\n        for (let j = i + 1; j < length; j++) {\n            result[i][j] = result[j][i];\n        }\n    }\n\n    return result;\n}\n\nmodule.exports = distanceMatrix;\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\nconst ClusterLeaf = require('./ClusterLeaf');\nconst Cluster = require('./Cluster');\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction simpleLink(cluster1, cluster2, disFun) {\n    var m = 10e100;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = i; j < cluster2.length; j++) {\n            var d = disFun(cluster1[i], cluster2[j]);\n            m = Math.min(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction completeLink(cluster1, cluster2, disFun) {\n    var m = -1;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = i; j < cluster2.length; j++) {\n            var d = disFun(cluster1[i], cluster2[j]);\n            m = Math.max(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction averageLink(cluster1, cluster2, disFun) {\n    var m = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            m += disFun(cluster1[i], cluster2[j]);\n        }\n    }\n    return m / (cluster1.length * cluster2.length);\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction centroidLink(cluster1, cluster2, disFun) {\n    var x1 = 0,\n        y1 = 0,\n        x2 = 0,\n        y2 = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        x1 += cluster1[i][0];\n        y1 += cluster1[i][1];\n    }\n    for (var j = 0; j < cluster2.length; j++) {\n        x2 += cluster2[j][0];\n        y2 += cluster2[j][1];\n    }\n    x1 /= cluster1.length;\n    y1 /= cluster1.length;\n    x2 /= cluster2.length;\n    y2 /= cluster2.length;\n    return disFun([x1, y1], [x2, y2]);\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction wardLink(cluster1, cluster2, disFun) {\n    var x1 = 0,\n        y1 = 0,\n        x2 = 0,\n        y2 = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        x1 += cluster1[i][0];\n        y1 += cluster1[i][1];\n    }\n    for (var j = 0; j < cluster2.length; j++) {\n        x2 += cluster2[j][0];\n        y2 += cluster2[j][1];\n    }\n    x1 /= cluster1.length;\n    y1 /= cluster1.length;\n    x2 /= cluster2.length;\n    y2 /= cluster2.length;\n    return disFun([x1, y1], [x2, y2]) * cluster1.length * cluster2.length / (cluster1.length + cluster2.length);\n}\n\n/**\n * @private\n * Returns the most distant point and his distance\n * @param {Array <Array <number>>} splitting - Clusters to split\n * @param {Array <Array <number>>} data - Original data\n * @param {function} disFun - Distance function\n * @returns {{d: number, p: number}} - d: maximum difference between points, p: the point more distant\n */\nfunction diff(splitting, data, disFun) {\n    var ans = {\n        d: 0,\n        p: 0\n    };\n\n    var Ci = new Array(splitting[0].length);\n    for (var e = 0; e < splitting[0].length; e++) {\n        Ci[e] = data[splitting[0][e]];\n    }\n    var Cj = new Array(splitting[1].length);\n    for (var f = 0; f < splitting[1].length; f++) {\n        Cj[f] = data[splitting[1][f]];\n    }\n\n    var dist, ndist;\n    for (var i = 0; i < Ci.length; i++) {\n        dist = 0;\n        for (var j = 0; j < Ci.length; j++) {\n            if (i !== j) {\n                dist += disFun(Ci[i], Ci[j]);\n            }\n        }\n        dist /= (Ci.length - 1);\n        ndist = 0;\n        for (var k = 0; k < Cj.length; k++) {\n            ndist += disFun(Ci[i], Cj[k]);\n        }\n        ndist /= Cj.length;\n        if ((dist - ndist) > ans.d) {\n            ans.d = (dist - ndist);\n            ans.p = i;\n        }\n    }\n    return ans;\n}\n\nvar defaultOptions = {\n    dist: euclidean,\n    kind: 'single'\n};\n\n/**\n * @private\n * Intra-cluster distance\n * @param {Array} index\n * @param {Array} data\n * @param {function} disFun\n * @returns {number}\n */\nfunction intrDist(index, data, disFun) {\n    var dist = 0,\n        count = 0;\n    for (var i = 0; i < index.length; i++) {\n        for (var j = i; j < index.length; j++) {\n            dist += disFun(data[index[i].index], data[index[j].index]);\n            count++;\n        }\n    }\n    return dist / count;\n}\n\n/**\n * Splits the higher level clusters\n * @param {Array <Array <number>>} data - Array of points to be clustered\n * @param {json} options\n * @constructor\n */\nfunction diana(data, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (typeof options.kind === 'string') {\n        switch (options.kind) {\n            case 'single':\n                options.kind = simpleLink;\n                break;\n            case 'complete':\n                options.kind = completeLink;\n                break;\n            case 'average':\n                options.kind = averageLink;\n                break;\n            case 'centroid':\n                options.kind = centroidLink;\n                break;\n            case 'ward':\n                options.kind = wardLink;\n                break;\n            default:\n                throw new RangeError('Unknown kind of similarity');\n        }\n    } else if (typeof options.kind !== 'function') {\n        throw new TypeError('Undefined kind of similarity');\n    }\n    var tree = new Cluster();\n    tree.children = new Array(data.length);\n    tree.index = new Array(data.length);\n    for (var ind = 0; ind < data.length; ind++) {\n        tree.children[ind] = new ClusterLeaf(ind);\n        tree.index[ind] = new ClusterLeaf(ind);\n    }\n\n    tree.distance = intrDist(tree.index, data, options.dist);\n    var m, M, clId,\n        dist, rebel;\n    var list = [tree];\n    while (list.length > 0) {\n        M = 0;\n        clId = 0;\n        for (var i = 0; i < list.length; i++) {\n            m = 0;\n            for (var j = 0; j < list[i].length; j++) {\n                for (var l = (j + 1); l < list[i].length; l++) {\n                    m = Math.max(options.dist(data[list[i].index[j].index], data[list[i].index[l].index]), m);\n                }\n            }\n            if (m > M) {\n                M = m;\n                clId = i;\n            }\n        }\n        M = 0;\n        if (list[clId].index.length === 2) {\n            list[clId].children = [list[clId].index[0], list[clId].index[1]];\n            list[clId].distance = options.dist(data[list[clId].index[0].index], data[list[clId].index[1].index]);\n        } else if (list[clId].index.length === 3) {\n            list[clId].children = [list[clId].index[0], list[clId].index[1], list[clId].index[2]];\n            var d = [\n                options.dist(data[list[clId].index[0].index], data[list[clId].index[1].index]),\n                options.dist(data[list[clId].index[1].index], data[list[clId].index[2].index])\n            ];\n            list[clId].distance = (d[0] + d[1]) / 2;\n        } else {\n            var C = new Cluster();\n            var sG = new Cluster();\n            var splitting = [new Array(list[clId].index.length), []];\n            for (var spl = 0; spl < splitting[0].length; spl++) {\n                splitting[0][spl] = spl;\n            }\n            for (var ii = 0; ii < splitting[0].length; ii++) {\n                dist = 0;\n                for (var jj = 0; jj < splitting[0].length; jj++) {\n                    if (ii !== jj) {\n                        dist += options.dist(data[list[clId].index[splitting[0][jj]].index], data[list[clId].index[splitting[0][ii]].index]);\n                    }\n                }\n                dist /= (splitting[0].length - 1);\n                if (dist > M) {\n                    M = dist;\n                    rebel = ii;\n                }\n            }\n            splitting[1] = [rebel];\n            splitting[0].splice(rebel, 1);\n            dist = diff(splitting, data, options.dist);\n            while (dist.d > 0) {\n                splitting[1].push(splitting[0][dist.p]);\n                splitting[0].splice(dist.p, 1);\n                dist = diff(splitting, data, options.dist);\n            }\n            var fData = new Array(splitting[0].length);\n            C.index = new Array(splitting[0].length);\n            for (var e = 0; e < fData.length; e++) {\n                fData[e] = data[list[clId].index[splitting[0][e]].index];\n                C.index[e] = list[clId].index[splitting[0][e]];\n                C.children[e] = list[clId].index[splitting[0][e]];\n            }\n            var sData = new Array(splitting[1].length);\n            sG.index = new Array(splitting[1].length);\n            for (var f = 0; f < sData.length; f++) {\n                sData[f] = data[list[clId].index[splitting[1][f]].index];\n                sG.index[f] = list[clId].index[splitting[1][f]];\n                sG.children[f] = list[clId].index[splitting[1][f]];\n            }\n            C.distance = intrDist(C.index, data, options.dist);\n            sG.distance = intrDist(sG.index, data, options.dist);\n            list.push(C);\n            list.push(sG);\n            list[clId].children = [C, sG];\n        }\n        list.splice(clId, 1);\n    }\n    return tree;\n}\n\nmodule.exports = diana;\n","'use strict';\n\nconst newArray = require('new-array');\n\nconst primeFinder = require('./primeFinder');\nconst nextPrime = primeFinder.nextPrime;\nconst largestPrime = primeFinder.largestPrime;\n\nconst FREE = 0;\nconst FULL = 1;\nconst REMOVED = 2;\n\nconst defaultInitialCapacity = 150;\nconst defaultMinLoadFactor = 1 / 6;\nconst defaultMaxLoadFactor = 2 / 3;\n\nclass HashTable {\n    constructor(options = {}) {\n        if (options instanceof HashTable) {\n            this.table = options.table.slice();\n            this.values = options.values.slice();\n            this.state = options.state.slice();\n            this.minLoadFactor = options.minLoadFactor;\n            this.maxLoadFactor = options.maxLoadFactor;\n            this.distinct = options.distinct;\n            this.freeEntries = options.freeEntries;\n            this.lowWaterMark = options.lowWaterMark;\n            this.highWaterMark = options.maxLoadFactor;\n            return;\n        }\n\n        const initialCapacity = options.initialCapacity === undefined ? defaultInitialCapacity : options.initialCapacity;\n        if (initialCapacity < 0) {\n            throw new RangeError(`initial capacity must not be less than zero: ${initialCapacity}`);\n        }\n\n        const minLoadFactor = options.minLoadFactor === undefined ? defaultMinLoadFactor : options.minLoadFactor;\n        const maxLoadFactor = options.maxLoadFactor === undefined ? defaultMaxLoadFactor : options.maxLoadFactor;\n        if (minLoadFactor < 0 || minLoadFactor >= 1) {\n            throw new RangeError(`invalid minLoadFactor: ${minLoadFactor}`);\n        }\n        if (maxLoadFactor <= 0 || maxLoadFactor >= 1) {\n            throw new RangeError(`invalid maxLoadFactor: ${maxLoadFactor}`);\n        }\n        if (minLoadFactor >= maxLoadFactor) {\n            throw new RangeError(`minLoadFactor (${minLoadFactor}) must be smaller than maxLoadFactor (${maxLoadFactor})`);\n        }\n\n        let capacity = initialCapacity;\n        // User wants to put at least capacity elements. We need to choose the size based on the maxLoadFactor to\n        // avoid the need to rehash before this capacity is reached.\n        // actualCapacity * maxLoadFactor >= capacity\n        capacity = (capacity / maxLoadFactor) | 0;\n        capacity = nextPrime(capacity);\n        if (capacity === 0) capacity = 1;\n\n        this.table = newArray(capacity, 0);\n        this.values = newArray(capacity, 0);\n        this.state = newArray(capacity, 0);\n\n        this.minLoadFactor = minLoadFactor;\n        if (capacity === largestPrime) {\n            this.maxLoadFactor = 1;\n        } else {\n            this.maxLoadFactor = maxLoadFactor;\n        }\n\n        this.distinct = 0;\n        this.freeEntries = capacity;\n\n        this.lowWaterMark = 0;\n        this.highWaterMark = chooseHighWaterMark(capacity, this.maxLoadFactor);\n    }\n\n    clone() {\n        return new HashTable(this);\n    }\n\n    get size() {\n        return this.distinct;\n    }\n\n    get(key) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return 0;\n        return this.values[i];\n    }\n\n    set(key, value) {\n        let i = this.indexOfInsertion(key);\n        if (i < 0) {\n            i = -i - 1;\n            this.values[i] = value;\n            return false;\n        }\n\n        if (this.distinct > this.highWaterMark) {\n            const newCapacity = chooseGrowCapacity(this.distinct + 1, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n            return this.set(key, value);\n        }\n\n        this.table[i] = key;\n        this.values[i] = value;\n        if (this.state[i] === FREE) this.freeEntries--;\n        this.state[i] = FULL;\n        this.distinct++;\n\n        if (this.freeEntries < 1) {\n            const newCapacity = chooseGrowCapacity(this.distinct + 1, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n        }\n\n        return true;\n    }\n    \n    remove(key, noRehash) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return false;\n\n        this.state[i] = REMOVED;\n        this.distinct--;\n\n        if (!noRehash) this.maybeShrinkCapacity();\n\n        return true;\n    }\n\n    delete(key, noRehash) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return false;\n\n        this.state[i] = FREE;\n        this.distinct--;\n\n        if (!noRehash) this.maybeShrinkCapacity();\n\n        return true;\n    }\n\n    maybeShrinkCapacity() {\n        if (this.distinct < this.lowWaterMark) {\n            const newCapacity = chooseShrinkCapacity(this.distinct, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n        }\n    }\n\n    containsKey(key) {\n        return this.indexOfKey(key) >= 0;\n    }\n\n    indexOfKey(key) {\n        const table = this.table;\n        const state = this.state;\n        const length = this.table.length;\n\n        const hash = key & 0x7fffffff;\n        let i = hash % length;\n        let decrement = hash % (length - 2);\n        if (decrement === 0) decrement = 1;\n\n        while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n            i -= decrement;\n            if (i < 0) i += length;\n        }\n\n        if (state[i] === FREE) return -1;\n        return i;\n    }\n\n    containsValue(value) {\n        return this.indexOfValue(value) >= 0;\n    }\n\n    indexOfValue(value) {\n        const values = this.values;\n        const state = this.state;\n\n        for (var i = 0; i < state.length; i++) {\n            if (state[i] === FULL && values[i] === value) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    indexOfInsertion(key) {\n        const table = this.table;\n        const state = this.state;\n        const length = table.length;\n\n\n        const hash = key & 0x7fffffff;\n        let i = hash % length;\n        let decrement = hash % (length - 2);\n        if (decrement === 0) decrement = 1;\n\n        while (state[i] === FULL && table[i] !== key) {\n            i -= decrement;\n            if (i < 0) i += length;\n        }\n\n        if (state[i] === REMOVED) {\n            const j = i;\n            while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n                i -= decrement;\n                if (i < 0) i += length;\n            }\n            if (state[i] === FREE) i = j;\n        }\n\n        if (state[i] === FULL) {\n            return -i - 1;\n        }\n\n        return i;\n    }\n\n    ensureCapacity(minCapacity) {\n        if (this.table.length < minCapacity) {\n            const newCapacity = nextPrime(minCapacity);\n            this.rehash(newCapacity);\n        }\n    }\n\n    rehash(newCapacity) {\n        const oldCapacity = this.table.length;\n\n        if (newCapacity <= this.distinct) throw new Error('Unexpected');\n\n        const oldTable = this.table;\n        const oldValues = this.values;\n        const oldState = this.state;\n\n        const newTable = newArray(newCapacity, 0);\n        const newValues = newArray(newCapacity, 0);\n        const newState = newArray(newCapacity, 0);\n\n        this.lowWaterMark = chooseLowWaterMark(newCapacity, this.minLoadFactor);\n        this.highWaterMark = chooseHighWaterMark(newCapacity, this.maxLoadFactor);\n\n        this.table = newTable;\n        this.values = newValues;\n        this.state = newState;\n        this.freeEntries = newCapacity - this.distinct;\n\n        for (var i = 0; i < oldCapacity; i++) {\n            if (oldState[i] === FULL) {\n                var element = oldTable[i];\n                var index = this.indexOfInsertion(element);\n                newTable[index] = element;\n                newValues[index] = oldValues[i];\n                newState[index] = FULL;\n            }\n        }\n    }\n\n    forEachKey(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.table[i])) return false;\n            }\n        }\n        return true;\n    }\n\n    forEachValue(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.values[i])) return false;\n            }\n        }\n        return true;\n    }\n\n    forEachPair(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.table[i], this.values[i])) return false;\n            }\n        }\n        return true;\n    }\n}\n\nmodule.exports = HashTable;\n\nfunction chooseLowWaterMark(capacity, minLoad) {\n    return (capacity * minLoad) | 0;\n}\n\nfunction chooseHighWaterMark(capacity, maxLoad) {\n    return Math.min(capacity - 2, (capacity * maxLoad) | 0);\n}\n\nfunction chooseGrowCapacity(size, minLoad, maxLoad) {\n    return nextPrime(Math.max(size + 1, (4 * size / (3 * minLoad + maxLoad)) | 0));\n}\n\nfunction chooseShrinkCapacity(size, minLoad, maxLoad) {\n    return nextPrime(Math.max(size + 1, (4 * size / (minLoad + 3 * maxLoad)) | 0));\n}\n","const binarySearch = require('binary-search');\nconst sortAsc = require('num-sort').asc;\n\nconst largestPrime = 0x7fffffff;\n\nconst primeNumbers = [\n    //chunk #0\n    largestPrime, // 2^31-1\n\n    //chunk #1\n    5, 11, 23, 47, 97, 197, 397, 797, 1597, 3203, 6421, 12853, 25717, 51437, 102877, 205759,\n    411527, 823117, 1646237, 3292489, 6584983, 13169977, 26339969, 52679969, 105359939,\n    210719881, 421439783, 842879579, 1685759167,\n\n    //chunk #2\n    433, 877, 1759, 3527, 7057, 14143, 28289, 56591, 113189, 226379, 452759, 905551, 1811107,\n    3622219, 7244441, 14488931, 28977863, 57955739, 115911563, 231823147, 463646329, 927292699,\n    1854585413,\n\n    //chunk #3\n    953, 1907, 3821, 7643, 15287, 30577, 61169, 122347, 244703, 489407, 978821, 1957651, 3915341,\n    7830701, 15661423, 31322867, 62645741, 125291483, 250582987, 501165979, 1002331963,\n    2004663929,\n\n    //chunk #4\n    1039, 2081, 4177, 8363, 16729, 33461, 66923, 133853, 267713, 535481, 1070981, 2141977, 4283963,\n    8567929, 17135863, 34271747, 68543509, 137087021, 274174111, 548348231, 1096696463,\n\n    //chunk #5\n    31, 67, 137, 277, 557, 1117, 2237, 4481, 8963, 17929, 35863, 71741, 143483, 286973, 573953,\n    1147921, 2295859, 4591721, 9183457, 18366923, 36733847, 73467739, 146935499, 293871013,\n    587742049, 1175484103,\n\n    //chunk #6\n    599, 1201, 2411, 4831, 9677, 19373, 38747, 77509, 155027, 310081, 620171, 1240361, 2480729,\n    4961459, 9922933, 19845871, 39691759, 79383533, 158767069, 317534141, 635068283, 1270136683,\n\n    //chunk #7\n    311, 631, 1277, 2557, 5119, 10243, 20507, 41017, 82037, 164089, 328213, 656429, 1312867,\n    2625761, 5251529, 10503061, 21006137, 42012281, 84024581, 168049163, 336098327, 672196673,\n    1344393353,\n\n    //chunk #8\n    3, 7, 17, 37, 79, 163, 331, 673, 1361, 2729, 5471, 10949, 21911, 43853, 87719, 175447, 350899,\n    701819, 1403641, 2807303, 5614657, 11229331, 22458671, 44917381, 89834777, 179669557,\n    359339171, 718678369, 1437356741,\n\n    //chunk #9\n    43, 89, 179, 359, 719, 1439, 2879, 5779, 11579, 23159, 46327, 92657, 185323, 370661, 741337,\n    1482707, 2965421, 5930887, 11861791, 23723597, 47447201, 94894427, 189788857, 379577741,\n    759155483, 1518310967,\n\n    //chunk #10\n    379, 761, 1523, 3049, 6101, 12203, 24407, 48817, 97649, 195311, 390647, 781301, 1562611,\n    3125257, 6250537, 12501169, 25002389, 50004791, 100009607, 200019221, 400038451, 800076929,\n    1600153859,\n\n    //chunk #11\n    13, 29, 59, 127, 257, 521, 1049, 2099, 4201, 8419, 16843, 33703, 67409, 134837, 269683,\n    539389, 1078787, 2157587, 4315183, 8630387, 17260781, 34521589, 69043189, 138086407,\n    276172823, 552345671, 1104691373,\n\n    //chunk #12\n    19, 41, 83, 167, 337, 677,\n    1361, 2729, 5471, 10949, 21911, 43853, 87719, 175447, 350899,\n    701819, 1403641, 2807303, 5614657, 11229331, 22458671, 44917381, 89834777, 179669557,\n    359339171, 718678369, 1437356741,\n\n    //chunk #13\n    53, 107, 223, 449, 907, 1823, 3659, 7321, 14653, 29311, 58631, 117269,\n    234539, 469099, 938207, 1876417, 3752839, 7505681, 15011389, 30022781,\n    60045577, 120091177, 240182359, 480364727, 960729461, 1921458943\n];\n\nprimeNumbers.sort(sortAsc);\n\nfunction nextPrime(value) {\n    let index = binarySearch(primeNumbers, value, sortAsc);\n    if (index < 0) {\n        index = ~index;\n    }\n    return primeNumbers[index];\n}\n\nexports.nextPrime = nextPrime;\nexports.largestPrime = largestPrime;\n","'use strict';\nmodule.exports = Number.isNaN || function (x) {\n\treturn x !== x;\n};\n","import Matrix from 'ml-matrix';\nimport newArray from 'new-array';\nimport simpleClustering from 'ml-simple-clustering';\nimport hlClust from 'ml-hclust';\n\nexport default class SpinSystem {\n  constructor(chemicalShifts, couplingConstants, multiplicity) {\n    this.chemicalShifts = chemicalShifts;\n    this.couplingConstants = couplingConstants;\n    this.multiplicity = multiplicity;\n    this.nSpins = chemicalShifts.length;\n    this._initConnectivity();\n    this._initClusters();\n  }\n\n  static fromSpinusPrediction(result) {\n    var lines = result.split('\\n');\n    var nspins = lines.length - 1;\n    var cs = new Array(nspins);\n    var integrals = new Array(nspins);\n    var ids = {};\n    var jc = Matrix.zeros(nspins, nspins);\n    for (let i = 0; i < nspins; i++) {\n      var tokens = lines[i].split('\\t');\n      cs[i] = +tokens[2];\n      ids[tokens[0] - 1] = i;\n      integrals[i] = +tokens[5];// Is it always 1??\n    }\n    for (let i = 0; i < nspins; i++) {\n      tokens = lines[i].split('\\t');\n      var nCoup = (tokens.length - 4) / 3;\n      for (j = 0; j < nCoup; j++) {\n        var withID = tokens[4 + 3 * j] - 1;\n        var idx = ids[withID];\n        jc[i][idx] = +tokens[6 + 3 * j];\n      }\n    }\n\n    for (var j = 0; j < nspins; j++) {\n      for (var i = j; i < nspins; i++) {\n        jc[j][i] = jc[i][j];\n      }\n    }\n    return new SpinSystem(cs, jc, newArray(nspins, 2));\n  }\n\n  static fromPrediction(input) {\n    let predictions = SpinSystem.ungroupAtoms(input);\n    const nSpins = predictions.length;\n    const cs = new Array(nSpins);\n    const jc = Matrix.zeros(nSpins, nSpins);\n    const multiplicity = new Array(nSpins);\n    const ids = {};\n    var i, k, j;\n    for (i = 0; i < nSpins; i++) {\n      cs[i] = predictions[i].delta;\n      ids[predictions[i].atomIDs[0]] = i;\n    }\n    for (i = 0; i < nSpins; i++) {\n      cs[i] = predictions[i].delta;\n      j = predictions[i].j;\n      for (k = 0; k < j.length; k++) {\n        jc[ids[predictions[i].atomIDs[0]]][ids[j[k].assignment]] = j[k].coupling;\n        jc[ids[j[k].assignment]][ids[predictions[i].atomIDs[0]]] = j[k].coupling;\n      }\n      multiplicity[i] = predictions[i].integral + 1;\n    }\n\n    return new SpinSystem(cs, jc, multiplicity);\n  }\n\n\n  static ungroupAtoms(prediction) {\n    let result = [];\n    prediction.forEach((pred) => {\n      let atomIDs = pred.atomIDs;\n      if (atomIDs instanceof Array) {\n        for (let i = 0; i < atomIDs.length; i++) {\n          let tempPred = JSON.parse(JSON.stringify(pred));\n          let nmrJ = [];\n          tempPred.atomIDs = [atomIDs[i]];\n          tempPred.integral = 1;\n          if (tempPred.j instanceof Array) {\n            for (let j = 0; j < tempPred.j.length; j++) {\n              let assignment = tempPred.j[j].assignment;\n              if (assignment instanceof Array) {\n                for (let k = 0; k < assignment.length; k++) {\n                  let tempJ = JSON.parse(JSON.stringify(tempPred.j[j]));\n                  tempJ.assignment = assignment[k];\n                  nmrJ.push(tempJ);\n                }\n              }\n            }\n          }\n          tempPred.j = nmrJ;\n          delete tempPred.nbAtoms;\n          result.push(tempPred);\n        }\n      }\n    });\n\n    return result;\n  }\n\n\n  _initClusters() {\n    this.clusters = simpleClustering(this.connectivity, { out: 'indexes' });\n  }\n\n  _initConnectivity() {\n    const couplings = this.couplingConstants;\n    const connectivity = Matrix.ones(couplings.length, couplings.length);\n    for (var i = 0; i < couplings.length; i++) {\n      for (var j = i; j < couplings[i].length; j++) {\n        if (couplings[i][j] === 0) {\n          connectivity[i][j] = 0;\n          connectivity[j][i] = 0;\n        }\n      }\n    }\n    this.connectivity = connectivity;\n  }\n\n\n  _calculateBetas(J, frequency) {\n    var betas = Matrix.zeros(J.length, J.length);\n    // Before clustering, we must add hidden J, we could use molecular information if available\n    var i, j;\n    for (i = 0; i < J.rows; i++) {\n      for (j = i; j < J.columns; j++) {\n        if ((this.chemicalShifts[i] - this.chemicalShifts[j]) !== 0) {\n          betas[i][j] = 1 - Math.abs(J[i][j] / ((this.chemicalShifts[i] - this.chemicalShifts[j]) * frequency));\n          betas[j][i] = betas[i][j];\n        } else if (!(i === j || J[i][j] !== 0)) {\n          betas[i][j] = 1;\n          betas[j][i] = 1;\n        }\n      }\n    }\n    return betas;\n  }\n\n  ensureClusterSize(options) {\n    var betas = this._calculateBetas(this.couplingConstants, options.frequency || 400);\n    var cluster = hlClust.agnes(betas, { isDistanceMatrix: true });\n    var list = [];\n    this._splitCluster(cluster, list, options.maxClusterSize || 8, false);\n    var clusters = this._mergeClusters(list);\n    this.nClusters = clusters.length;\n    // console.log(clusters);\n    this.clusters = new Array(clusters.length);\n    // System.out.println(this.conmatrix);\n    for (var j = 0; j < this.nClusters; j++) {\n      this.clusters[j] = [];\n      for (var i = 0; i < this.nSpins; i++) {\n        if (clusters[j][i] !== 0) {\n          if (clusters[j][i] < 0) {\n            this.clusters[j].push(-(i + 1));\n          } else {\n            this.clusters[j].push(i);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n     * Recursively split the clusters until the maxClusterSize criteria has been ensured.\n     * @param {Array} cluster\n     * @param {Array} clusterList\n     * @param {number} maxClusterSize\n     * @param  {boolean} force\n     */\n  _splitCluster(cluster, clusterList, maxClusterSize, force) {\n    if (!force && cluster.index.length <= maxClusterSize) {\n      clusterList.push(this._getMembers(cluster));\n    } else {\n      for (var child of cluster.children) {\n        if (!isNaN(child.index) || child.index.length <= maxClusterSize) {\n          var members = this._getMembers(child);\n          // Add the neighbors that shares at least 1 coupling with the given cluster\n          var count = 0;\n          for (var i = 0; i < this.nSpins; i++) {\n            if (members[i] === 1) {\n              count++;\n              for (var j = 0; j < this.nSpins; j++) {\n                if (this.connectivity[i][j] === 1 && members[j] === 0) {\n                  members[j] = -1;\n                  count++;\n                }\n              }\n            }\n          }\n\n          if (count <= maxClusterSize) {\n            clusterList.push(members);\n          } else {\n            if (isNaN(child.index)) {\n              this._splitCluster(child, clusterList, maxClusterSize, true);\n            } else {\n              // We have to threat this spin alone and use the resurrection algorithm instead of the simulation\n              members[child.index] = 2;\n              clusterList.push(members);\n            }\n          }\n        } else {\n          this._splitCluster(child, clusterList, maxClusterSize, false);\n        }\n      }\n    }\n  }\n  /**\n     * Recursively gets the cluster members\n     * @param cluster\n     * @param members\n     */\n\n  _getMembers(cluster) {\n    var members = new Array(this.nSpins);\n    for (var i = 0; i < this.nSpins; i++) {\n      members[i] = 0;\n    }\n    if (!isNaN(cluster.index)) {\n      members[cluster.index * 1] = 1;\n    } else {\n      for (var index of cluster.index) {\n        members[index.index * 1] = 1;\n      }\n    }\n    return members;\n  }\n\n  _mergeClusters(list) {\n    var nElements = 0;\n    var clusterA, clusterB, i, j, index, common, count;\n    for (i = list.length - 1; i >= 0; i--) {\n      clusterA = list[i];\n      nElements = clusterA.length;\n      index = 0;\n\n      // Is it a candidate to be merged?\n      while (index < nElements && clusterA[index++] !== -1);\n\n      if (index < nElements) {\n        for (j = list.length - 1; j >= i + 1; j--) {\n          clusterB = list[j];\n          // Do they have common elements?\n          index = 0;\n          common = 0;\n          count = 0;\n          while (index < nElements) {\n            if (clusterA[index] * clusterB[index] === -1) {\n              common++;\n            }\n            if (clusterA[index] !== 0 || clusterB[index] !== 0) {\n              count++;\n            }\n            index++;\n          }\n\n          if (common > 0 && count <= this.maxClusterSize) {\n            // Then we can merge those 2 clusters\n            index = 0;\n            while (index < nElements) {\n              if (clusterB[index] === 1) {\n                clusterA[index] = 1;\n              } else {\n                if (clusterB[index] === -1 && clusterA[index] !== 1) {\n                  clusterA[index] = -1;\n                }\n              }\n              index++;\n            }\n            // list.remove(clusterB);\n            list.splice(j, 1);\n            j++;\n          }\n        }\n      }\n    }\n\n    return list;\n  }\n}\n","import SparseMatrix from 'ml-sparse-matrix';\n\nfunction createPauli(mult) {\n  const spin = (mult - 1) / 2;\n  const prjs = new Array(mult);\n  const temp = new Array(mult);\n  for (var i = 0; i < mult; i++) {\n    prjs[i] = (mult - 1) - i - spin;\n    temp[i] = Math.sqrt(spin * (spin + 1) - prjs[i] * (prjs[i] + 1));\n  }\n  const p = diag(temp, 1, mult, mult);\n  for (i = 0; i < mult; i++) {\n    temp[i] = Math.sqrt(spin * (spin + 1) - prjs[i] * (prjs[i] - 1));\n  }\n  const m = diag(temp, -1, mult, mult);\n  const x = p.clone().add(m).mul(0.5);\n  const y = m.clone().mul(-1).add(p).mul(-0.5);\n  const z = diag(prjs, 0, mult, mult);\n  return { x, y, z, m, p };\n}\n\nfunction diag(A, d, n, m) {\n  const diag = new SparseMatrix(n, m, { initialCapacity: 20 });\n  for (var i = 0; i < A.length; i++) {\n    if ((i - d) >= 0 && (i - d) < n && i < m) {\n      diag.set(i - d, i, A[i]);\n    }\n  }\n  return diag;\n}\n\nconst pauli2 = createPauli(2);\n\nexport default function getPauli(mult) {\n  if (mult === 2) return pauli2;\n  else return createPauli(mult);\n}\n","import Matrix from 'ml-matrix';\nimport SparseMatrix from 'ml-sparse-matrix';\nimport binarySearch from 'binary-search';\nimport { asc as sortAsc } from 'num-sort';\n\nimport getPauli from './pauli';\n\nconst smallValue = 1e-2;\n\nexport default function simulate1d(spinSystem, options) {\n  var i, j;\n  var {\n    lineWidth = 1,\n    nbPoints = 1024,\n    maxClusterSize = 10,\n    output = 'y',\n    frequency: frequencyMHz = 400,\n    noiseFactor = 1\n  } = options;\n\n  nbPoints = Number(nbPoints);\n\n  const from = options.from * frequencyMHz || 0;\n  const to = (options.to || 10) * frequencyMHz;\n\n  const chemicalShifts = spinSystem.chemicalShifts.slice();\n  for (i = 0; i < chemicalShifts.length; i++) {\n    chemicalShifts[i] = chemicalShifts[i] * frequencyMHz;\n  }\n\n  let lineWidthPoints = (nbPoints * lineWidth / Math.abs(to - from)) / 2.355;\n  let lnPoints = lineWidthPoints * 20;\n\n  const gaussianLength = lnPoints | 0;\n  const gaussian = new Array(gaussianLength);\n  const b = lnPoints / 2;\n  const c = lineWidthPoints * lineWidthPoints * 2;\n  for (i = 0; i < gaussianLength; i++) {\n    gaussian[i] = 1e9 * Math.exp(-((i - b) * (i - b)) / c);\n  }\n\n  var result = options.withNoise ? [...new Array(nbPoints)].map(() => Math.random() * noiseFactor) : new Array(nbPoints).fill(0);\n\n  const multiplicity = spinSystem.multiplicity;\n  for (var h = 0; h < spinSystem.clusters.length; h++) {\n    const cluster = spinSystem.clusters[h];\n\n    var clusterFake = new Array(cluster.length);\n    for (i = 0; i < cluster.length; i++) {\n      clusterFake[i] = cluster[i] < 0 ? -cluster[i] - 1 : cluster[i];\n    }\n\n    var weight = 1;\n    var sumI = 0;\n    const frequencies = [];\n    const intensities = [];\n    if (cluster.length > maxClusterSize) {\n      // This is a single spin, but the cluster exceeds the maxClusterSize criteria\n      // we use the simple multiplicity algorithm\n      // Add the central peak. It will be split with every single J coupling.\n      var index = 0;\n      while (cluster[index++] < 0);\n      index = cluster[index - 1];\n      var currentSize, jc;\n      frequencies.push(-chemicalShifts[index]);\n      for (i = 0; i < cluster.length; i++) {\n        if (cluster[i] < 0) {\n          jc = spinSystem.couplingConstants[index][clusterFake[i]] / 2;\n          currentSize = frequencies.length;\n          for (j = 0; j < currentSize; j++) {\n            frequencies.push(frequencies[j] + jc);\n            frequencies[j] -= jc;\n          }\n        }\n      }\n\n      frequencies.sort(sortAsc);\n      sumI = frequencies.length;\n      weight = 1;\n\n      for (i = 0; i < sumI; i++) {\n        intensities.push(1);\n      }\n    } else {\n      const hamiltonian = getHamiltonian(\n        chemicalShifts,\n        spinSystem.couplingConstants,\n        multiplicity,\n        spinSystem.connectivity,\n        clusterFake\n      );\n\n      const hamSize = hamiltonian.rows;\n      const evd = new Matrix.DC.EVD(hamiltonian);\n      const V = evd.eigenvectorMatrix;\n      const diagB = evd.realEigenvalues;\n      const assignmentMatrix = new SparseMatrix(hamSize, hamSize);\n      const multLen = cluster.length;\n      weight = 0;\n      for (var n = 0; n < multLen; n++) {\n        const L = getPauli(multiplicity[clusterFake[n]]);\n\n        let temp = 1;\n        for (j = 0; j < n; j++) {\n          temp *= multiplicity[clusterFake[j]];\n        }\n        const A = SparseMatrix.eye(temp);\n\n        temp = 1;\n        for (j = n + 1; j < multLen; j++) {\n          temp *= multiplicity[clusterFake[j]];\n        }\n        const B = SparseMatrix.eye(temp);\n        const tempMat = A.kroneckerProduct(L.m).kroneckerProduct(B);\n        if (cluster[n] >= 0) {\n          assignmentMatrix.add(tempMat.mul(cluster[n] + 1));\n          weight++;\n        } else {\n          assignmentMatrix.add(tempMat.mul(cluster[n]));\n        }\n      }\n\n      let rhoip = Matrix.zeros(hamSize, hamSize);\n      assignmentMatrix.forEachNonZero((i, j, v) => {\n        if (v > 0) {\n          const row = V[j];\n          for (var k = 0; k < row.length; k++) {\n            if (row[k] !== 0) {\n              rhoip.set(i, k, rhoip.get(i, k) + row[k]);\n            }\n          }\n        }\n        return v;\n      });\n\n      let rhoip2 = rhoip.clone();\n      assignmentMatrix.forEachNonZero((i, j, v) => {\n        if (v < 0) {\n          const row = V[j];\n          for (var k = 0; k < row.length; k++) {\n            if (row[k] !== 0) {\n              rhoip2.set(i, k, rhoip2.get(i, k) + row[k]);\n            }\n          }\n        }\n        return v;\n      });\n\n      const tV = V.transpose();\n      rhoip = tV.mmul(rhoip);\n      rhoip = new SparseMatrix(rhoip, { threshold: smallValue });\n      triuTimesAbs(rhoip, smallValue);\n      rhoip2 = tV.mmul(rhoip2);\n      rhoip2 = new SparseMatrix(rhoip2, { threshold: smallValue });\n      triuTimesAbs(rhoip2, smallValue);\n      // eslint-disable-next-line no-loop-func\n      rhoip2.forEachNonZero((i, j, v) => {\n        var val = rhoip.get(i, j);\n        val = Math.min(Math.abs(val), Math.abs(v));\n        val *= val;\n\n        sumI += val;\n        var valFreq = diagB[i] - diagB[j];\n        var insertIn = binarySearch(frequencies, valFreq, sortAsc);\n        if (insertIn < 0) {\n          frequencies.splice(-1 - insertIn, 0, valFreq);\n          intensities.splice(-1 - insertIn, 0, val);\n        } else {\n          intensities[insertIn] += val;\n        }\n      });\n    }\n    const numFreq = frequencies.length;\n    if (numFreq > 0) {\n      weight = weight / sumI;\n      const diff = lineWidth / 32;\n      let valFreq = frequencies[0];\n      let inte = intensities[0];\n      let count = 1;\n      for (i = 1; i < numFreq; i++) {\n        if (Math.abs(frequencies[i] - valFreq / count) < diff) {\n          inte += intensities[i];\n          valFreq += frequencies[i];\n          count++;\n        } else {\n          addPeak(result, valFreq / count, inte * weight, from, to, nbPoints, gaussian);\n          valFreq = frequencies[i];\n          inte = intensities[i];\n          count = 1;\n        }\n      }\n      addPeak(result, valFreq / count, inte * weight, from, to, nbPoints, gaussian);\n    }\n  }\n  if (output === 'xy') {\n    return { x: _getX(options.from, options.to, nbPoints), y: result };\n  }\n  if (output === 'y') {\n    return result;\n  }\n  throw new RangeError('wrong output option');\n}\n\nfunction addPeak(result, freq, height, from, to, nbPoints, gaussian) {\n  const center = (nbPoints * (-freq - from) / (to - from)) | 0;\n  const lnPoints = gaussian.length;\n  var index = 0;\n  var indexLorentz = 0;\n  for (var i = center - lnPoints / 2; i < center + lnPoints / 2; i++) {\n    index = i | 0;\n    if (i >= 0 && i < nbPoints) {\n      result[index] = result[index] + gaussian[indexLorentz] * height;\n    }\n    indexLorentz++;\n  }\n}\n\nfunction triuTimesAbs(A, val) {\n  A.forEachNonZero((i, j, v) => {\n    if (i > j) return 0;\n    if (Math.abs(v) <= val) return 0;\n    return v;\n  });\n}\n\nfunction getHamiltonian(chemicalShifts, couplingConstants, multiplicity, conMatrix, cluster) {\n  let hamSize = 1;\n  for (var i = 0; i < cluster.length; i++) {\n    hamSize *= multiplicity[cluster[i]];\n  }\n\n  const clusterHam = new SparseMatrix(hamSize, hamSize);\n\n  for (var pos = 0; pos < cluster.length; pos++) {\n    var n = cluster[pos];\n\n    const L = getPauli(multiplicity[n]);\n\n    let A1, B1;\n    let temp = 1;\n    for (let i = 0; i < pos; i++) {\n      temp *= multiplicity[cluster[i]];\n    }\n    A1 = SparseMatrix.eye(temp);\n\n    temp = 1;\n    for (let i = pos + 1; i < cluster.length; i++) {\n      temp *= multiplicity[cluster[i]];\n    }\n    B1 = SparseMatrix.eye(temp);\n\n    const alpha = chemicalShifts[n];\n    const kronProd = A1.kroneckerProduct(L.z).kroneckerProduct(B1);\n    clusterHam.add(kronProd.mul(alpha));\n\n    for (var pos2 = 0; pos2 < cluster.length; pos2++) {\n      const k = cluster[pos2];\n      if (conMatrix[n][k] === 1) {\n        const S = getPauli(multiplicity[k]);\n\n        let A2, B2;\n        let temp = 1;\n        for (let i = 0; i < pos2; i++) {\n          temp *= multiplicity[cluster[i]];\n        }\n        A2 = SparseMatrix.eye(temp);\n\n        temp = 1;\n        for (let i = pos2 + 1; i < cluster.length; i++) {\n          temp *= multiplicity[cluster[i]];\n        }\n        B2 = SparseMatrix.eye(temp);\n\n        const kron1 = A1.kroneckerProduct(L.x).kroneckerProduct(B1).mmul(A2.kroneckerProduct(S.x).kroneckerProduct(B2));\n        kron1.add(A1.kroneckerProduct(L.y).kroneckerProduct(B1).mul(-1).mmul(A2.kroneckerProduct(S.y).kroneckerProduct(B2)));\n        kron1.add(A1.kroneckerProduct(L.z).kroneckerProduct(B1).mmul(A2.kroneckerProduct(S.z).kroneckerProduct(B2)));\n\n        clusterHam.add(kron1.mul(couplingConstants[n][k] / 2));\n      }\n    }\n  }\n\n  return clusterHam;\n}\n\nfunction _getX(from, to, nbPoints) {\n  const x = new Array(nbPoints);\n  const dx = (to - from) / (nbPoints - 1);\n  for (var i = 0; i < nbPoints; i++) {\n    x[i] = from + i * dx;\n  }\n  return x;\n}\n","import Matrix from 'ml-matrix';\n\nlet defOptions = {\n  H: { frequency: 400, lineWidth: 10 },\n  C: { frequency: 100, lineWidth: 10 }\n};\n\nexport default function simule2DNmrSpectrum(table, options) {\n  var i;\n  const fromLabel = table[0].fromAtomLabel;\n  const toLabel = table[0].toLabel;\n  const frequencyX = options.frequencyX || defOptions[fromLabel].frequency;\n  const frequencyY = options.frequencyY || defOptions[toLabel].frequency;\n  var lineWidthX = options.lineWidthX || defOptions[fromLabel].lineWidth;\n  var lineWidthY = options.lineWidthY || defOptions[toLabel].lineWidth;\n  let symmetrize = options.symmetrize || false;\n\n  var sigmaX = lineWidthX / frequencyX;\n  var sigmaY = lineWidthY / frequencyY;\n\n  var minX = table[0].fromChemicalShift;\n  var maxX = table[0].fromChemicalShift;\n  var minY = table[0].toChemicalShift;\n  var maxY = table[0].toChemicalShift;\n  i = 1;\n  while (i < table.length) {\n    minX = Math.min(minX, table[i].fromChemicalShift);\n    maxX = Math.max(maxX, table[i].fromChemicalShift);\n    minY = Math.min(minY, table[i].toChemicalShift);\n    maxY = Math.max(maxY, table[i].toChemicalShift);\n    i++;\n  }\n\n  if (options.firstX !== null && !isNaN(options.firstX)) {\n    minX = options.firstX;\n  }\n  if (options.firstY !== null && !isNaN(options.firstY)) {\n    minY = options.firstY;\n  }\n  if (options.lastX !== null && !isNaN(options.lastX)) {\n    maxX = options.lastX;\n  }\n  if (options.lastY !== null && !isNaN(options.lastY)) {\n    maxY = options.lastY;\n  }\n\n  var nbPointsX = options.nbPointsX || 512;\n  var nbPointsY = options.nbPointsY || 512;\n\n  var spectraMatrix = new Matrix(nbPointsY, nbPointsX).fill(0);\n  i = 0;\n  while (i < table.length) {\n    // parameters.couplingConstant = table[i].j;\n    // parameters.pathLength = table[i].pathLength;\n    let peak = {\n      x: unitsToArrayPoints(table[i].fromChemicalShift, minX, maxX, nbPointsX),\n      y: unitsToArrayPoints(table[i].toChemicalShift, minY, maxY, nbPointsY),\n      z: table[i].fromAtoms.length + table[i].toAtoms.length,\n      widthX: unitsToArrayPoints(sigmaX + minX, minX, maxX, nbPointsX),\n      widthY: unitsToArrayPoints(sigmaY + minY, minY, maxY, nbPointsY)\n    };\n    addPeak(spectraMatrix, peak);\n    if (symmetrize) {\n      addPeak(spectraMatrix, { x: peak.y, y: peak.x, z: peak.z, widthX: peak.widthY, widthY: peak.widthX });\n    }\n    i++;\n  }\n  return spectraMatrix;\n}\n\nfunction unitsToArrayPoints(x, from, to, nbPoints) {\n  return ((x - from) * (nbPoints - 1)) / (to - from);\n}\n\nfunction addPeak(matrix, peak) {\n  var nSigma = 4;\n  var fromX = Math.max(0, Math.round(peak.x - peak.widthX * nSigma));\n  var toX = Math.min(matrix[0].length - 1, Math.round(peak.x + peak.widthX * nSigma));\n  var fromY = Math.max(0, Math.round(peak.y - peak.widthY * nSigma));\n  var toY = Math.min(matrix.length - 1, Math.round(peak.y + peak.widthY * nSigma));\n\n  var squareSigmaX = peak.widthX * peak.widthX;\n  var squareSigmaY = peak.widthY * peak.widthY;\n  for (var j = fromY; j < toY; j++) {\n    for (var i = fromX; i < toX; i++) {\n      var exponent = Math.pow(peak.x - i, 2) / squareSigmaX +\n                Math.pow(peak.y - j, 2) / squareSigmaY;\n      var result = 10000 * peak.z * Math.exp(-exponent);\n      matrix[j][i] += result;\n    }\n  }\n}\n","export { default as SpinSystem } from './SpinSystem';\nexport { default as simulate1D } from './simulate1D';\nexport { default as simulate2D } from './simulate2D';\n"],"sourceRoot":""}